{"version":3,"file":"static/js/172.29255c15.chunk.js","mappings":"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","sources":["components/Basket/Total/TotalPrice.styled.js","components/Basket/Total/TotalPrice.jsx","components/Basket/Basket.styled.js","components/Basket/Basket.jsx","pages/Basket.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { ReactComponent as done } from 'images/svg/done.svg';\nimport { ReactComponent as shippingFast } from 'images/svg/shipping-fast.svg';\n\nexport const PaymentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 40%;\n    min-width: 300px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 500px;\n  }\n`;\n\nexport const PaymentTotal = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 8px 8px 8px 26px;\n  background-color: ${theme.colors.green6};\n`;\n\nexport const PaymentTotalTitle = styled.h4`\n  color: ${theme.colors.brown1};\n  font-family: ${theme.fonts[1]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n  margin-bottom: 11px;\n`;\n\nexport const PaymentBoxOrder = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const PaymentTotalList = styled.tbody`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n`;\n\nexport const PaymentTotalListItem = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const PaymentTotalListItemTitle = styled.th`\n  color: ${theme.colors.brown1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.28px;\n`;\n\nexport const PaymentTotalListItemDiscr = styled.td`\n  width: 90px;\n\n  color: ${theme.colors.brown2};\n  font-family: ${theme.fonts[1]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  text-align: start;\n`;\n\nexport const PaymentTotalTitlePrice = styled.th`\n  color: ${theme.colors.brown1};\n  font-family: ${theme.fonts[1]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n`;\n\nexport const PaymentTotalTitlePriceDiscr = styled(PaymentTotalListItemDiscr)`\n  color: ${theme.colors.brown1};\n  font-size: 16px;\n  letter-spacing: 0.32px;\n`;\n\nexport const PaymentBtn = styled(Link)`\n  width: 100%;\n  padding: 15px;\n\n  color: ${theme.colors.brown2};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  text-transform: uppercase;\n  text-decoration: none;\n  text-align: center;\n\n  border-radius: 10px;\n  border: 1px solid ${theme.colors.brown2};\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background: ${theme.colors.green};\n    border: 1px solid ${theme.colors.green};\n\n    /* border-radius: 10px;\n    border: 1px solid ${theme.colors.green2};\n    background: ${theme.colors.green5}; */\n  }\n`;\n\nexport const DeliverBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    align-items: flex-start;\n  }\n`;\n\nexport const DeliverBoxItem = styled.p`\n  display: flex;\n  align-items: center;\n  color: ${theme.colors.brown2};\n  font-family: ${theme.fonts[1]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: 160%; /* 19.2px */\n`;\n\nexport const Done = styled(done)`\n  margin-right: 14px;\n`;\n\nexport const ShippingFast = styled(shippingFast)`\n  margin-right: 14px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectTotalAmount,\n  selectTotalDiscount,\n  selectTotalPayment,\n  selectCurrency,\n} from 'redux/basket/selectors';\nimport {\n  DeliverBox,\n  DeliverBoxItem,\n  Done,\n  PaymentBox,\n  PaymentBtn,\n  PaymentTotal,\n  PaymentTotalList,\n  PaymentTotalListItem,\n  PaymentTotalListItemDiscr,\n  PaymentTotalListItemTitle,\n  PaymentTotalTitle,\n  PaymentTotalTitlePrice,\n  PaymentTotalTitlePriceDiscr,\n  ShippingFast,\n} from './TotalPrice.styled';\n// import { selectOrders } from 'redux/order/selectors';\n\nexport const TotalPrice = () => {\n  const totalAmount = useSelector(selectTotalAmount).toFixed(2);\n  const totalDiscount = useSelector(selectTotalDiscount).toFixed(2);\n  const totalPayment = useSelector(selectTotalPayment).toFixed(2);\n  const currency = useSelector(selectCurrency);\n  // const orders = useSelector(selectOrders);\n\n  return (\n    <PaymentBox>\n      <PaymentTotal>\n        <PaymentTotalTitle>Total</PaymentTotalTitle>\n        <table>\n          <PaymentTotalList>\n            <PaymentTotalListItem>\n              <PaymentTotalListItemTitle>\n                Amount for the product\n              </PaymentTotalListItemTitle>\n              <PaymentTotalListItemDiscr>\n                {currency}\n                {totalAmount}\n              </PaymentTotalListItemDiscr>\n            </PaymentTotalListItem>\n\n            <PaymentTotalListItem>\n              <PaymentTotalListItemTitle>\n                Discount amount\n              </PaymentTotalListItemTitle>\n              <PaymentTotalListItemDiscr>\n                {currency}\n                {totalDiscount}\n              </PaymentTotalListItemDiscr>\n            </PaymentTotalListItem>\n\n            <PaymentTotalListItem>\n              <PaymentTotalListItemTitle>Delivery</PaymentTotalListItemTitle>\n              {totalAmount < 150 ? (\n                <PaymentTotalListItemDiscr>\n                  {currency}\n                  {150 - totalAmount}\n                </PaymentTotalListItemDiscr>\n              ) : (\n                <PaymentTotalListItemDiscr>Free</PaymentTotalListItemDiscr>\n              )}\n            </PaymentTotalListItem>\n\n            <PaymentTotalListItem>\n              <PaymentTotalTitlePrice>Payment</PaymentTotalTitlePrice>\n              <PaymentTotalTitlePriceDiscr>\n                {currency}\n                {totalPayment}\n              </PaymentTotalTitlePriceDiscr>\n            </PaymentTotalListItem>\n          </PaymentTotalList>\n        </table>\n      </PaymentTotal>\n      {/* {orders.length > 0 ? (\n        <PaymentBtn>Pay</PaymentBtn>\n      ) : ( */}\n      <div id=\"paymentBtn\">\n        <PaymentBtn to={`/checkout/step1`}>checkout</PaymentBtn>\n      </div>\n      {/* )} */}\n      <DeliverBox>\n        <DeliverBoxItem>\n          <ShippingFast />\n          Get free standart shipping when you spend $150 or more.\n        </DeliverBoxItem>\n        <DeliverBoxItem>\n          <Done />\n          If your plant dies withing 30 days, we’ll replace it for free.\n        </DeliverBoxItem>\n      </DeliverBox>\n    </PaymentBox>\n  );\n};\n","import styled from 'styled-components';\nimport { Section, Title } from 'components/baseStyles/CommonStyle.styled';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Button } from 'components/helpers/ButtonSplit/ButtonSplit.styled';\nimport { Container } from 'components/baseStyles/CommonStyle.styled';\nimport { DataContainerText } from 'components/CheckOut/Order/Order.styled';\nimport { ProfileContainer } from 'components/UserComp/UserData/UserData.styled';\n\nexport const BasketSection = styled(Section)`\n  padding-top: 123px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding-top: 129px;\n  }\n`;\n\nexport const BasketContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 100%;\n  padding-top: 68px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 68px 30px 0 30px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding: 68px 120px 0 120px;\n  }\n`;\n\nexport const BasketWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    flex-direction: row;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 121px;\n  }\n`;\n\nexport const TitleCheckOut = styled(Title)`\n  margin-bottom: 40px;\n  margin-top: 0;\n  text-transform: uppercase;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: ${theme.fontSizes.extraXL};\n    font-weight: 500;\n    margin-bottom: 32px;\n    color: ${theme.colors.brown1};\n  }\n`;\n\nexport const TextCheckOut = styled.p`\n  font-size: ${theme.fonts[1]};\n  font-size: ${theme.fontSizes.medium};\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  margin-bottom: 40px;\n  margin-top: 0;\n  color: ${theme.colors.brown2};\n`;\n\nexport const Btn = styled(Button)`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-bottom: 20px;\n\n  color: ${theme.colors.brown1};\n  background: ${theme.colors.green4};\n  border: none;\n  border-radius: 4px;\n\n  transform: scale(1);\n  cursor: pointer;\n\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: ${theme.transition[0]};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n    color: ${theme.colors.white};\n    background: ${theme.colors.brown2};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n    transition: none;\n  }\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    margin-bottom: 71px;\n  }\n`;\n\nexport const Legend = styled.h1`\n  margin-bottom: 40px;\n  margin-top: 0;\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  text-transform: uppercase;\n  color: ${theme.colors.brown1};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    margin-bottom: 32px;\n    font-size: 20px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const BasketCompList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 60%;\n    min-width: 350px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 24px;\n    width: 600px;\n  }\n`;\n\nexport const AuthCheckOutBox = styled.div`\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const OrderBox = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 68px;\n  gap: 30px 20px;\n  width: 600px;\n`;\n\nexport const OrderBoxContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 20px;\n  width: 285px;\n  height: 300px;\n\n  background-color: ${theme.colors.green6};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 10px;\n  }\n`;\n\nexport const OrderBoxTitle = styled.p`\n  color: ${theme.colors.brown1};\n  font-family: ${theme.fonts[1]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n  position: relative;\n  padding-bottom: 12px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n\n    height: 1px;\n    width: 100%;\n    background: ${theme.colors.brown1};\n  }\n`;\n\nexport const DataContainerTextGreen = styled(DataContainerText)`\n  color: ${theme.colors.green};\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBasket } from 'redux/basket/selectors';\nimport { getUser } from 'redux/auth/selectors';\nimport { BasketList } from 'components/Basket/BasketList/BasketList';\nimport { TotalPrice } from './Total/TotalPrice';\nimport {\n  BasketSection,\n  BasketContainer,\n  TitleCheckOut,\n  TextCheckOut,\n  Btn,\n  Legend,\n  AuthCheckOutBox,\n  BasketCompList,\n  BasketWrapper,\n  OrderBox,\n  OrderBoxTitle,\n  DataContainerTextGreen,\n  OrderBoxContainer,\n} from './Basket.styled';\n// import { selectComment, selectOrders } from 'redux/order/selectors';\n// import {\n//   DataContainerCheckMark,\n//   DataContainerPensil,\n//   DataContainerText,\n// } from 'components/CheckOut/Order/Order.styled';\n// import { PensilStyle } from 'components/UserComp/UserData/UserData.styled';\n// import { useState } from 'react';\n// import { addCommentToOrder } from 'redux/order/operations';\n\n// import { useTranslation } from 'react-i18next';\n\nexport const Basket = () => {\n  // const { t } = useTranslation();\n  // const userComment = useSelector(selectComment);\n  const auth = useSelector(getUser);\n  const basket = useSelector(selectBasket);\n  // const orders = useSelector(selectOrders);\n  const dispatch = useDispatch();\n  // const [showAddAddress, setShowAddAddress] = useState(false);\n  // const [comment, setComment] = useState(userComment || '');\n\n  // const handleCommentChange = e => {\n  //   setComment(e.target.value);\n  // };\n\n  // const handleAddComment = (orderId, comment) => {\n  //   dispatch(addCommentToOrder(orderId, comment));\n  // };\n\n  return (\n    <BasketSection>\n      <BasketContainer>\n        <Legend>Basket</Legend>\n\n        {/* {auth._id && basket.length > 0 ? ( */}\n        {basket.length > 0 ? (\n          <BasketWrapper>\n            <BasketCompList>\n              {basket.map((product, idx) => (\n                <BasketList\n                  key={`${idx}${product._id}`}\n                  {...{ ...product, index: idx }}\n                />\n              ))}\n            </BasketCompList>\n\n            <TotalPrice />\n          </BasketWrapper>\n        ) : (\n          <AuthCheckOutBox>\n            <TitleCheckOut>YOUR Basket is empty</TitleCheckOut>\n            <TextCheckOut>Please add an item to checkout</TextCheckOut>\n            <Link to=\"/catalog\" style={{ textDecoration: 'none' }}>\n              <Btn>SHOP</Btn>\n            </Link>\n          </AuthCheckOutBox>\n        )}\n\n        {/* {orders.map(order => (\n          <OrderBox key={order.id}>\n            <OrderBoxContainer>\n              <OrderBoxTitle>Selected delivery</OrderBoxTitle>\n              <DataContainerText>\n                {order.selectedDeliveryOption}\n              </DataContainerText>\n              <DataContainerText>{order.cityDelivery}</DataContainerText>\n              <DataContainerText>{order.department}</DataContainerText>\n            </OrderBoxContainer>\n\n            <OrderBoxContainer>\n              <OrderBoxTitle>Selected address</OrderBoxTitle>\n\n              <DataContainerTextGreen>\n                {order.name} {order.surname}\n              </DataContainerTextGreen>\n              <DataContainerText>{order.company}</DataContainerText>\n              <DataContainerText>{order.city}</DataContainerText>\n              <DataContainerText>{order.state}</DataContainerText>\n              <DataContainerText>{order.zipCode}</DataContainerText>\n              <DataContainerText>{order.address1}</DataContainerText>\n              <DataContainerText>{order.address2}</DataContainerText>\n              <DataContainerText>{order.email}</DataContainerText>\n              <DataContainerText>{order.phone}</DataContainerText>\n            </OrderBoxContainer>\n\n            <OrderBoxContainer>\n              <OrderBoxTitle>Selected payment</OrderBoxTitle>\n              <DataContainerText>\n                {order.selectedPaymentOption}\n              </DataContainerText>\n            </OrderBoxContainer>\n\n            <OrderBoxContainer>\n              <OrderBoxTitle> Comments to order</OrderBoxTitle>\n              <DataContainerPensil\n                onClick={() => setShowAddAddress(!showAddAddress)}\n              >\n                {showAddAddress ? (\n                  <DataContainerCheckMark\n                    onClick={() => {\n                      const orderId = order.id;\n                      const commentUser = comment;\n                      handleAddComment(orderId, commentUser);\n                    }}\n                  />\n                ) : (\n                  <PensilStyle />\n                )}\n              </DataContainerPensil>\n\n              <DataContainerText>{order.comment}</DataContainerText>\n\n              {showAddAddress && (\n                <form>\n                  <label>\n                    <textarea\n                      name=\"comment\"\n                      value={comment}\n                      onChange={handleCommentChange}\n                      id=\"comment\"\n                      cols=\"30\"\n                      rows=\"10\"\n                    ></textarea>\n                  </label>\n                </form>\n              )}\n            </OrderBoxContainer>\n          </OrderBox>\n        ))} */}\n\n        {basket.length === 0 && !auth._id ? (\n          <AuthCheckOutBox>\n            <TitleCheckOut>\n              For quick ordering and saving order history\n            </TitleCheckOut>\n            <TextCheckOut>\n              Make sure you’re signed into your account\n            </TextCheckOut>\n            <Link to=\"/signin\" style={{ textDecoration: 'none' }}>\n              <Btn>SIGN IN</Btn>\n            </Link>\n          </AuthCheckOutBox>\n        ) : (\n          <AuthCheckOutBox></AuthCheckOutBox>\n        )}\n      </BasketContainer>\n    </BasketSection>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport { SEO } from 'utils/SEO';\nimport { Basket } from 'components/Basket/Basket';\n\nconst BasketPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Basket\" description=\"Your shopping bag\" />\n      <Basket />\n    </>\n  );\n};\n\nexport default BasketPage;\n"],"names":["PaymentBox","styled","div","_templateObject","_taggedTemplateLiteral","theme","breakpoints","tablet","desktop","PaymentTotal","_templateObject2","colors","green6","PaymentTotalTitle","h4","_templateObject3","brown1","fonts","PaymentTotalList","_templateObject4","tbody","_templateObject5","PaymentTotalListItem","tr","_templateObject6","PaymentTotalListItemTitle","th","_templateObject7","PaymentTotalListItemDiscr","td","_templateObject8","brown2","PaymentTotalTitlePrice","_templateObject9","PaymentTotalTitlePriceDiscr","_templateObject10","PaymentBtn","Link","_templateObject11","white","green","green2","green5","DeliverBox","_templateObject12","DeliverBoxItem","p","_templateObject13","Done","done","_templateObject14","ShippingFast","shippingFast","_templateObject15","TotalPrice","totalAmount","useSelector","selectTotalAmount","toFixed","totalDiscount","selectTotalDiscount","totalPayment","selectTotalPayment","currency","selectCurrency","_jsxs","children","_jsx","id","to","BasketSection","Section","BasketContainer","Container","BasketWrapper","TitleCheckOut","Title","fontSizes","extraXL","TextCheckOut","medium","Btn","Button","green4","transition","Legend","h1","BasketCompList","ul","AuthCheckOutBox","Basket","DataContainerText","auth","getUser","basket","selectBasket","useDispatch","length","map","product","idx","BasketList","_objectSpread","index","concat","_id","style","textDecoration","dispatch","useEffect","addHeaderBottom","headerBottom","_Fragment","SEO","title","description"],"sourceRoot":""}