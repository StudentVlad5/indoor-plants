{"version":3,"file":"static/js/297.e64a58e8.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/Schemas/schemas.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\nimport { Title } from 'components/baseStyles/CommonStyle.styled';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Button } from 'components/helpers/ButtonSplit/ButtonSplit.styled';\n\nexport const FormSection = styled.section`\n  @media screen and (max-width: ${theme.breakpoints.tablet_max}) {\n    background-repeat: no-repeat;\n    background-size: 620px auto;\n    background-position: bottom -250px left 30%;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints\n      .tablet}) and (max-width: ${theme.breakpoints.desktop_max}) {\n    background-repeat: no-repeat;\n    background-size: 1396px auto;\n    background-position: bottom -130px left 50%;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  height: 100%;\n  min-height: calc(100vh - 140px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: ${theme.breakpoints.tablet}) {\n    padding-top: 170px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-top: 44px;\n    min-height: calc(100vh - 120px);\n\n    background-repeat: no-repeat;\n    background-size: 1280px auto;\n    background-position: bottom 0 left 50%;\n  }\n`;\nexport const TitleRegister = styled(Title)`\n  margin-bottom: 40px;\n  margin-top: 0;\n  text-transform: uppercase;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: ${theme.fontSizes.extraXL};\n    font-weight: 500;\n    margin-bottom: 32px;\n    color: ${theme.colors.brown1};\n  }\n`;\n\nexport const FormRegister = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 608px;\n    height: 100%;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n`;\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport const IconValid = styled(FaCheck)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const IconInValid = styled(FaTimes)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 30px;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: ${theme.fontSizes.small};\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  margin-bottom: 0px;\n  background: ${theme.colors.blue1};\n  color: ${theme.colors.brown2};\n  border: none;\n  transition: all 0.25s ease-in;\n  &:focus,\n  &:hover {\n    border-color: ${theme.colors.darkGreen};\n    color: ${theme.colors.darkGreen};\n    outline: none;\n  }\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 448px;\n    font-size: ${theme.fontSizes.medium};\n    padding: 14px 0 13px 32px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 558px;\n  }\n  &::placeholder {\n    text-transform: uppercase;\n  }\n  &:focus ~ .floating-label,\n  &:not([value='']):not(:focus):invalid ~ .floating-label,\n  &:not([value='']):not(:focus):valid ~ .floating-label {\n    top: -15px;\n    left: 20px;\n    font-size: 11px;\n    opacity: 1;\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  font-family: ${theme.fonts[0]};\n  font-size: ${theme.fontSizes.small};\n  text-transform: uppercase;\n  pointer-events: none;\n  left: 20px;\n  top: 18px;\n  transition: 0.2s ease all;\n`;\n\nexport const Btn = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  width: 125px;\n  border-radius: 4px;\n  color: ${theme.colors.brown1};\n  background: ${theme.colors.green4};\n  transform: scale(1);\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n    color: ${theme.colors.white};\n    background: ${theme.colors.brown2};\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 180px;\n  }\n`;\nexport const BackButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 125px;\n  border: none;\n  border-radius: 4px;\n  color: ${theme.colors.brown1};\n  background: ${theme.colors.green4};\n  transform: scale(1);\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n    color: ${theme.colors.white};\n    background: ${theme.colors.brown2};\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 180px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: -5px;\n  left: 60%;\n  color: #e53e3e;\n  font-family: ${theme.fonts[1]};\n  font-size: ${theme.fontSizes.small};\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n  margin-bottom: -16px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    /* left: 32px; */\n  }\n`;\n\nexport const Div = styled.div`\n  margin-bottom: 32px;\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 280px;\n  margin-bottom: 32px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 448px;\n    font-size: ${theme.fontSizes.medium};\n    flex-direction: row;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 558px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${theme.colors.brown2};\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    color: ${theme.colors.brown3};\n  }\n`;\nexport const BoxText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: ${theme.fontSizes.small};\n  letter-spacing: 0.04em;\n  color: ${theme.brown2};\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport schemas from 'components/Schemas/schemas';\nimport { register } from 'redux/auth/operations';\nimport theme from 'components/baseStyles/Variables.styled';\nimport {\n  FormRegister,\n  FormContainer,\n  Input,\n  Btn,\n  TitleRegister,\n  BackButton,\n  ShowPassword,\n  StyledLink,\n  BoxText,\n  IconValid,\n  IconInValid,\n  ErrBox,\n  Div,\n  FormSection,\n  BtnContainer,\n  Span,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ values }) => {\n    setIsLoading(true);\n    const { name: userName, email, password, phone, location } = values;\n    dispatch(\n      register({\n        userName,\n        email,\n        password,\n        phone,\n        location,\n      }),\n    );\n    setIsLoading(false);\n  };\n\n  const showForm = () => {\n    setIsShown(false);\n  };\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phone: '',\n      location: '',\n    },\n    validationSchema: schemas.registerSchema,\n    onSubmit: (values, action) => {\n      onSubmit({ values, action });\n    },\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\n    formik.values.email === '' ||\n    formik.values.confirmPassword === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.registerSchema}>\n          <FormRegister onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleRegister>{'Register'}</TitleRegister>\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.email,\n                      formik.errors.email,\n                    ),\n                  }}\n                  name=\"email\"\n                  type=\"email\"\n                  value={formik.values.email}\n                  validate={schemas.registerSchema.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n\n                {!formik.values.email ? null : !formik.errors.email ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.email && formik.touched.email ? (\n                  <ErrBox>{formik.errors.email}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Email</Span>\n              </Div>\n            )}\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.password,\n                      formik.errors.password,\n                    ),\n                  }}\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrBox>{formik.errors.password}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Password</Span>\n              </Div>\n            )}\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.confirmPassword,\n                      formik.errors.confirmPassword,\n                    ),\n                  }}\n                  name=\"confirmPassword\"\n                  type={showConfirmPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.confirmPassword}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showConfirmPassword}>\n                  {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.confirmPassword &&\n                formik.touched.confirmPassword ? (\n                  <ErrBox>{formik.errors.confirmPassword}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Confirm Password</Span>\n              </Div>\n            )}\n            {isShown && (\n              <BtnContainer>\n                <Btn type=\"button\" onClick={showForm} disabled={isValid}>\n                  {'Next'}\n                </Btn>\n                <BoxText>\n                  <span>{'Already have an account?'}</span>\n                  <StyledLink to=\"/signin\">{'Sign In'}</StyledLink>\n                </BoxText>\n              </BtnContainer>\n            )}\n            {!isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.name,\n                      formik.errors.name,\n                    ),\n                  }}\n                  name=\"name\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                  onBlur={formik.handleBlur}\n                />\n                {!formik.values.name ? null : !formik.errors.name ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.name && formik.touched.name ? (\n                  <ErrBox>{formik.errors.name}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Name</Span>\n              </Div>\n            )}\n            {!isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.location,\n                      formik.errors.location,\n                    ),\n                  }}\n                  name=\"location\"\n                  type=\"text\"\n                  value={formik.values.location}\n                  onBlur={formik.handleBlur}\n                  onChange={e => {\n                    formik.handleChange(e);\n                  }}\n                />\n                {!formik.values.location ? null : !formik.errors.location ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n\n                {formik.errors.location && formik.touched.location ? (\n                  <ErrBox>{formik.errors.location}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Location, region</Span>\n              </Div>\n            )}\n            {!isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.phone,\n                      formik.errors.phone,\n                    ),\n                  }}\n                  id=\"phone\"\n                  type=\"phone\"\n                  onChange={formik.handleChange}\n                  value={formik.values.phone}\n                  onBlur={formik.handleBlur}\n                  name=\"phone\"\n                />\n                {!formik.values.phone ? null : !formik.errors.phone ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.phone && formik.touched.phone ? (\n                  <ErrBox>{formik.errors.phone}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Mobile phone</Span>\n              </Div>\n            )}\n            {!isShown && (\n              <BtnContainer>\n                <Btn type=\"submit\" aria-label=\"submit registration\">\n                  {isLoading ? 'Loading' : 'Register'}\n                </Btn>\n                <BackButton\n                  type=\"button\"\n                  aria-label=\"back button\"\n                  onClick={hideForm}\n                >\n                  {'Back'}\n                </BackButton>\n                <BoxText>\n                  <span>{'Already have an account?'}</span>{' '}\n                  <StyledLink to=\"/signin\">{'Sign In'}</StyledLink>\n                </BoxText>\n              </BtnContainer>\n            )}\n          </FormRegister>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default RegisterForm;\n","import * as Yup from 'yup';\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require field'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Password must match')\n    .required('Require field'),\n  name: Yup.string()\n    .matches(/\\S{2,}/, 'Name too short (min 2)')\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      'Name must includes only Latin alphabet',\n    )\n    .required('Require field'),\n  phone: Yup.number()\n    .nullable(true)\n    .required('Require field')\n    .min(99999)\n    .max(999999999999),\n  location: Yup.string()\n    .matches(\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Require field'),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require'),\n});\n\nconst changePasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n});\n\n// const noticeSchemaFirst = Yup.object().shape({\n//   category: Yup.string().required('Category is Required!'),\n//   typeofpet: Yup.string().required('Type of Pet is Required!'),\n//   title: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(48, 'Too Long!')\n//     .required('Title is Required!'),\n//   name: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(16, 'Too Long!')\n//     .required('Name is Required!'),\n//   birthday: Yup.date().required('BirthDay is Required!'),\n//   breed: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(34, 'Too Long!')\n//     .required('Breed is Required!'),\n// });\n// const noticeSchemaSecond = Yup.object().shape({\n//   sex: Yup.string().required('Sex is Required!'),\n//   size: Yup.string().required('Size is Required!'),\n//   height: Yup.number()\n//     .moreThan('0')\n//     .positive()\n//     .integer()\n//     .max(100, 'Too Match!')\n//     .required('Height is Required!'),\n//   weight: Yup.number()\n//     .moreThan('0')\n//     .positive()\n//     .max(100, 'Too Match!')\n//     .required('Weight is Required!'),\n//   location: Yup.string()\n//     .matches(\n//       /(([0-9A-Za-zsd&.-]){1,}, ([0-9A-Za-zsd&,.-]){1,})/,\n//       'Invalid format. Example: Brovary, Kyiv ...',\n//     )\n//     .required('Location is Required!'),\n// });\n\n// const noticeSchemaSecondPrice = noticeSchemaSecond.concat(\n//   Yup.object().shape({\n//     price: Yup.number()\n//       .moreThan('0')\n//       .positive()\n//       .integer()\n//       .required('Price is Required!'),\n//     currency: Yup.string().required('Currency is Required!'),\n//   }),\n// );\n\n// const noticeSchemaThird = Yup.object().shape({\n//   imageUrl: Yup.string().required('Image is Required!'),\n//   imageUrl_1: Yup.string(),\n//   imageUrl_2: Yup.string(),\n//   passport: Yup.string().required('Passport is Required!'),\n//   sterilization: Yup.string().required('Sterilization is Required!'),\n//   lives: Yup.string().required('Lives is Required!'),\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\n// const noticeSchemaThirdforEdit = Yup.object().shape({\n//   imageUrl: Yup.string(),\n//   imageUrl_1: Yup.string(),\n//   imageUrl_2: Yup.string(),\n//   passport: Yup.string().required('Passport is Required!'),\n//   sterilization: Yup.string().required('Sterilization is Required!'),\n//   lives: Yup.string().required('Lives is Required!'),\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\n// const addPetsUser = Yup.object().shape({\n//   name: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(16, 'Too Long!')\n//     .required('Name is Required!'),\n\n//   data: Yup.date().required('BirthDay is Required!'),\n\n//   breed: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(34, 'Too Long!')\n//     .required('Breed is Required!'),\n\n//   // imageUrl: Yup.mixed().required('Photo is Required!'),\n\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  changePasswordSchema,\n};\n\nexport default schemas;\n"],"names":["FormSection","styled","section","_templateObject","_taggedTemplateLiteral","theme","breakpoints","tablet_max","tablet","desktop_max","FormContainer","div","_templateObject2","desktop","TitleRegister","Title","_templateObject3","fontSizes","extraXL","colors","brown1","FormRegister","Form","_templateObject4","ShowPassword","span","_templateObject5","IconValid","FaCheck","_templateObject6","IconInValid","FaTimes","_templateObject7","Input","Field","_templateObject8","small","blue1","brown2","darkGreen","medium","Span","_templateObject9","fonts","Btn","Button","_templateObject10","green4","white","BackButton","_templateObject11","ErrBox","_templateObject12","Div","_templateObject13","BtnContainer","_templateObject14","StyledLink","Link","_templateObject15","brown3","BoxText","_templateObject16","_useState","useState","_useState2","_slicedToArray","isShown","setIsShown","_useState3","_useState4","showPass","setShowPass","_useState5","_useState6","showConfirmPass","setShowConfirmPass","_useState7","_useState8","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","confirmPassword","phone","location","validationSchema","schemas","registerSchema","onSubmit","values","action","_ref","userName","register","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","concat","red","_jsx","children","Formik","_jsxs","handleSubmit","autoComplete","style","borderColor","type","value","validate","onChange","handleChange","onBlur","handleBlur","color","green1","className","onClick","ImEye","ImEyeBlocked","disabled","to","e","id","Yup","shape","matches","required","min","max","oneOf","nullable","schemasLogin","changePasswordSchema"],"sourceRoot":""}