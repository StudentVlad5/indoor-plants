{"version":3,"file":"static/js/456.08732b06.chunk.js","mappings":"sRAGMA,EAAuBC,EAAAA,GAAAA,IAAH,gRAIQC,EAAAA,EAAAA,YAAAA,OAIAA,EAAAA,EAAAA,YAAAA,SAI5BC,EAAaF,EAAAA,GAAAA,IAAH,mIAOVG,EAAaH,EAAAA,GAAAA,GAAH,0F,UCZHI,EAAc,WACzB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAqBJ,EAAAA,EAAAA,UAAS,MAArBK,GAAT,eACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAwBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACEJ,GAAa,GADf,mBAG2BK,EAAAA,EAAAA,IAAU,YAAD,OAAaF,IAHjD,mBAGYG,EAHZ,EAGYA,KAHZ,0CAKaC,EAAAA,EAAAA,IAAa,iCAL1B,OAOIT,EAAeQ,GAPnB,kDASIL,EAAS,EAAD,IATZ,yBAWID,GAAa,GAXjB,8EADc,uBAAC,WAAD,wBAedQ,EACD,GAAE,IAEHC,QAAQC,IAAIb,IAGV,SAACP,EAAD,UAC2B,KAAb,OAAXO,QAAW,IAAXA,OAAA,EAAAA,EAAac,SAAiBZ,EAG7BF,EAAYe,KAAI,SAAAC,GAAI,OAClB,UAACpB,EAAD,YACE,gBAAKqB,IA7BM,iCA6BcD,EAAKE,OAAO,GAAIC,IAAKH,EAAKI,QACnD,eAAIC,MAAO,CAAEC,OAAQ,YAArB,SAAoCN,EAAKI,QACzC,SAACvB,EAAD,UACGmB,EAAKO,QAAQR,KAAI,SAAAN,GAAI,OACpB,gBAAIY,MAAO,CAAEC,OAAQ,QAArB,UACGb,EAAKe,MADR,KACiB,IACdC,KAAKC,MACJC,OAAOlB,EAAKmB,MAAMC,MAAM,KAAKC,KAAK,MAChCH,OAAOlB,EAAKsB,SAASF,MAAM,KAAKC,KAAK,MACvC,GAEDd,EAAKgB,WAP4BvB,EAAKe,MADrB,QAJTR,EAAKiB,IADJ,KAFpB,gEAwBP,E,UCnDD,EAVoB,WAClB,OACE,iCACE,SAACC,EAAA,EAAD,CAAKV,MAAM,qBAAqBW,YAAY,sBAC5C,yCACA,SAACrC,EAAD,MAGL,C,sHCPKsC,EAAW,4B,SAGF5B,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAAyB6B,GAAzB,8EACQC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAQ,GAAD,OAAKJ,GAAL,OAAgBC,GACvBI,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,MAChC,gCAAiC,mBAPvC,SAWeH,EAAcI,MAX7B,0GA8HAlC,EAAUmC,UAAY,CACpBN,WAAYO,IAAAA,OAAAA,YAIAA,IAAAA,OAAAA,WAIAA,IAAAA,OAAAA,WACFA,IAAAA,OAAAA,U","sources":["components/CatalogList/CatalogList.styled.js","components/CatalogList/CatalogList.jsx","pages/Catalog.jsx","services/APIservice.js"],"sourcesContent":["import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\n\nconst CatalogListContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  width: 100%;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr 1fr;\n    gap: 20px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\nconst ItemWraper = styled.div`\n  display: flex;\n  justify-content: start;\n  flex-direction: column;\n  width: 285px;\n  height: 520px;\n`;\nconst NameWraper = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 4px;\n`;\n\nexport { CatalogListContainer, ItemWraper, NameWraper };\n","import React, { useEffect, useState } from 'react';\nimport { fetchData } from 'services/APIservice';\nimport { useSearchParams } from 'react-router-dom';\nimport { onFetchError } from 'components/helpers/Messages/NotifyMessages';\nimport {\n  CatalogListContainer,\n  ItemWraper,\n  NameWraper,\n} from './CatalogList.styled';\n\nexport const CatalogList = () => {\n  const [listOfGoods, setListOfGoods] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n\n  const BASE_URL_IMG = 'http://localhost:3030/uploads/';\n\n  useEffect(() => {\n    async function fetchListOfGoods() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/catalog?${searchParams}`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setListOfGoods(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchListOfGoods();\n  }, []);\n\n  console.log(listOfGoods);\n\n  return (\n    <CatalogListContainer>\n      {listOfGoods?.length === 0 && !isLoading ? (\n        <h3>Whoops! Can&apost find anything...</h3>\n      ) : (\n        listOfGoods.map(item => (\n          <ItemWraper key={item._id}>\n            <img src={BASE_URL_IMG + item.images[0]} alt={item.name} />\n            <h4 style={{ margin: '4px auto' }}>{item.name}</h4>\n            <NameWraper>\n              {item.options.map(data => (\n                <li style={{ margin: 'auto' }} key={data.title}>\n                  {data.title} -{' '}\n                  {Math.round(\n                    Number(data.price.split(',').join('.')) -\n                      Number(data.discount.split(',').join('.')),\n                    2,\n                  )}\n                  {item.currency}\n                </li>\n              ))}\n            </NameWraper>\n          </ItemWraper>\n        ))\n      )}\n    </CatalogListContainer>\n  );\n};\n","import { CatalogList } from 'components/CatalogList/CatalogList';\nimport React from 'react';\nimport { SEO } from 'utils/SEO';\n\nconst CatalogPage = () => {\n  return (\n    <>\n      <SEO title=\"HomeForest Catalog\" description=\"Catalog of goods\" />\n      <h3>CatalogPage</h3>\n      <CatalogList />\n    </>\n  );\n};\n\nexport default CatalogPage;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\n// const { BASE_URL } = window.global;\n\nconst BASE_URL = 'http://localhost:3030/api';\n\n// pathParams\nasync function fetchData(pathParams) {\n  const axiosInstance = axios.create({\n    baseURL: `${BASE_URL}${pathParams}`, //${pathParams}\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET',\n      'Access-Control-Expose-Headers': 'Content-Range',\n    },\n  });\n\n  return await axiosInstance.get();\n}\n\n// async function fetchNotice(pathParams, body, file1, file2, file3) {\n//   const formData = new FormData();\n//   formData.append('category', body.category);\n//   formData.append('birthday', body.birthday);\n//   formData.append('typeofpet', body.typeofpet);\n//   formData.append('breed', body.breed);\n//   formData.append('size', body.size);\n//   formData.append('height', body.height);\n//   formData.append('weight', body.weight);\n//   formData.append('passport', body.passport);\n//   formData.append('sterilization', body.sterilization);\n//   formData.append('lives', body.lives);\n//   formData.append('comments', body.comments);\n//   formData.append('imageUrl', file1);\n//   file2 && formData.append('imageUrl_1', file2);\n//   file3 && formData.append('imageUrl_2', file3);\n//   formData.append('location', body.location);\n//   formData.append('name', body.name);\n//   body.price !== '' && formData.append('price', body.price);\n//   body.currency !== '' && formData.append('currency', body.currency);\n//   formData.append('sex', body.sex);\n//   formData.append('title', body.title);\n\n//   return axios.post(`${BASE_URL}${pathParams}`, formData, {\n//     headers: {\n//       'Content-Type': 'multipart/form-data',\n//       'Access-Control-Allow-Origin': '*',\n//       'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n//     },\n//   });\n// }\n\n// async function fetchPetsUser(pathParams, body, file) {\n//   const formData = new FormData();\n//   formData.append('name', body.values.name);\n//   formData.append('date', body.values.data);\n//   formData.append('breed', body.values.breed);\n//   formData.append('comments', body.values.comments);\n//   formData.set('imageURL', file);\n\n//   return axios.post(`${BASE_URL}${pathParams}`, formData, {\n//     headers: {\n//       'Content-Type': 'multipart/form-data',\n//       'Access-Control-Allow-Origin': '*',\n//       'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n//     },\n//   });\n// }\n\n// async function fetchPatchNotice(pathParams, body, file1, file2, file3) {\n//   const formData = new FormData();\n//   formData.append('birthday', body.birthday);\n//   formData.append('typeofpet', body.typeofpet);\n//   formData.append('category', body.category);\n//   formData.append('breed', body.breed);\n//   formData.append('size', body.size);\n//   formData.append('height', body.height);\n//   formData.append('weight', body.weight);\n//   formData.append('passport', body.passport);\n//   formData.append('sterilization', body.sterilization);\n//   formData.append('lives', body.lives);\n//   formData.append('comments', body.comments);\n//   file1 && formData.set('imageUrl', file1);\n//   file2 && formData.set('imageUrl_1', file2);\n//   file3 && formData.set('imageUrl_2', file3);\n//   formData.append('location', body.location);\n//   formData.append('name', body.name);\n//   body.price && formData.append('price', body.price);\n//   body.currency && formData.append('currency', body.currency);\n//   formData.append('sex', body.sex);\n//   formData.append('title', body.title);\n\n//   return axios.patch(`${BASE_URL}${pathParams}`, formData, {\n//     headers: {\n//       'Content-Type': 'multipart/form-data',\n//       'Access-Control-Allow-Origin': '*',\n//       'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n//     },\n//   });\n// }\n\nasync function updateUserData(pathParams, body, file) {\n  const formData = new FormData();\n  file && formData.set('avatar', file);\n  formData.append('email', body.email);\n  formData.append('birthday', body.birthday);\n  formData.append('location', body.location);\n  formData.append('password', body.password);\n  formData.append('phone', body.phone);\n  formData.append('role', body.role);\n  formData.append('userName', body.userName);\n\n  return await axios.patch(`${BASE_URL}${pathParams}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    },\n  });\n}\n\nasync function deleteData(pathParams) {\n  const formData = new FormData();\n  return axios.delete(`${BASE_URL}${pathParams}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    },\n  });\n}\n\nfetchData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n};\n\ndeleteData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n};\n\nupdateUserData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n  formData: PropTypes.string.isRequired,\n};\n\nexport {\n  fetchData,\n  // fetchNotice,\n  // fetchPetsUser,\n  // fetchPatchNotice,\n  updateUserData,\n  deleteData,\n};\n"],"names":["CatalogListContainer","styled","theme","ItemWraper","NameWraper","CatalogList","useState","listOfGoods","setListOfGoods","isLoading","setIsLoading","setError","useSearchParams","searchParams","useEffect","fetchData","data","onFetchError","fetchListOfGoods","console","log","length","map","item","src","images","alt","name","style","margin","options","title","Math","round","Number","price","split","join","discount","currency","_id","SEO","description","BASE_URL","pathParams","axiosInstance","axios","baseURL","headers","get","propTypes","PropTypes"],"sourceRoot":""}