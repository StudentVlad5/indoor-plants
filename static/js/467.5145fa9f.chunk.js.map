{"version":3,"file":"static/js/467.5145fa9f.chunk.js","mappings":"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","sources":["components/Care/Care.styled.js","components/Care/Care.jsx","pages/Care.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Container, Section } from 'components/baseStyles/CommonStyle.styled';\n\nconst CareSection = styled(Section)`\n  padding-top: 122px;\n  display: flex;\n  flex-direction: row;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding-top: 154px;\n  }\n`;\n\nconst CareContainer = styled(Container)`\n  margin: 0 auto;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n`;\nconst ListContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll;\n  box-sizing: content-box;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst CareUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  position: relative;\n  width: 100%;\n`;\n\nconst CareLi = styled.li`\n  margin: 8px 0px;\n  width: 100%;\n`;\n\nconst CareSpanTitle = styled.span`\n  font-size: ${theme.fontSizes.extra};\n  color: ${theme.colors.darkGreen};\n  font-family: ${theme.fonts[1]};\n  font-weight: 500px;\n`;\n\nconst CareSpan = styled.span`\n  font-size: ${theme.fontSizes.large};\n  color: ${theme.colors.brown};\n  font-family: ${theme.fonts[1]};\n  font-weight: 400px;\n  padding-left: 40px;\n`;\n\nconst CareP = styled.p`\n  font-size: ${theme.fontSizes.large};\n  color: ${theme.colors.brown};\n  font-family: ${theme.fonts[1]};\n  font-weight: 400px;\n  padding-left: 40px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 10px 0;\n  width: 100%;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  position: sticky;\n  top: 0px;\n  width: 100%;\n  padding: 8px 0 8px 10px;\n\n  font-family: ${theme.fonts[0]}; //Raisonne Pro\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${theme.colors.green};\n  background-color: ${theme.colors.fon};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 18px 0 18px 10px;\n    font-size: 14px;\n  }\n\n  border-top: 1px solid ${theme.colors.beige};\n\n  &:last-of-type {\n    border-bottom: 0.5px solid ${theme.colors.beige};\n  }\n`;\n\nconst TitleHeading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n\n  cursor: pointer;\n\n  &.active ~ div {\n    display: flex;\n  }\n\n  & span {\n    text-transform: uppercase;\n  }\n`;\nexport {\n  CareSection,\n  CareContainer,\n  CareUl,\n  CareLi,\n  CareSpanTitle,\n  List,\n  ListItem,\n  TitleHeading,\n  CareP,\n  CareSpan,\n  ListContainer,\n};\n","import React from 'react';\nimport { getCareList } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'components/helpers/Loader/Loader';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {\n  CareContainer,\n  CareSection,\n  ListItem,\n  TitleHeading,\n  List,\n  CareSpanTitle,\n  CareP,\n  CareSpan,\n  CareLi,\n  CareUl,\n  ListContainer,\n} from './Care.styled';\n\nexport const Care = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [products, setProducts] = useState(false);\n  const [plant, setPlant] = useState(false);\n  const [, setError] = useState(null);\n\n  const alphabet = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ];\n  let arraOfNames = [];\n  if (products) {\n    products.map(item => {\n      arraOfNames.push(...item.common);\n    });\n  }\n  let uniqArr = Array.from(new Set(arraOfNames.map(item => item.trim())));\n\n  const handleChoicePlant = e => {\n    e.preventDefault;\n    let plantForSearch = [];\n    plantForSearch = products?.map(item => {\n      for (let i = 0; i < item.common?.length; i++) {\n        if (item.common[i] === e.currentTarget.innerText) {\n          plantForSearch.push(item);\n        }\n      }\n      setPlant(plantForSearch);\n    });\n  };\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await getCareList(`/care`);\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n        setProducts(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n  return (\n    <CareSection>\n      <CareContainer>\n        <ListContainer>\n          {products &&\n            alphabet.map(item => (\n              <List key={item}>\n                <ListItem>{item.toUpperCase()}</ListItem>\n                {arraOfNames &&\n                  uniqArr.map((it, index) => {\n                    if (it?.slice(0, 1).toLowerCase() === item)\n                      return (\n                        <TitleHeading\n                          style={{ cursor: 'pointer' }}\n                          key={index}\n                          onClick={e => handleChoicePlant(e)}\n                        >\n                          {it}\n                        </TitleHeading>\n                      );\n                  })}\n              </List>\n            ))}\n        </ListContainer>\n        {isLoading ? onLoading() : onLoaded()}\n      </CareContainer>\n      <CareContainer>\n        <ListContainer>\n          {plant &&\n            plant.map(plant => (\n              <CareUl key={plant.id}>\n                <CareLi>\n                  <CareSpanTitle style={{ fontWeight: '700' }}>\n                    Common names:{' '}\n                  </CareSpanTitle>\n                  <CareP style={{ fontWeight: '700' }}>\n                    {plant.common.join(', ')}\n                  </CareP>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Category: </CareSpanTitle>\n                  <CareSpan>{plant.category}</CareSpan>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Family: </CareSpanTitle>\n                  <CareSpan>{plant.family}</CareSpan>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Latin name: </CareSpanTitle>\n                  <CareP>{plant.latin}</CareP>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Origin: </CareSpanTitle>\n                  <CareSpan>{plant.origin}</CareSpan>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Ideal light: </CareSpanTitle>\n                  <CareSpan>{plant.ideallight}</CareSpan>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Tolerated light: </CareSpanTitle>\n                  <CareP>{plant.toleratedlight}</CareP>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Watering: </CareSpanTitle>\n                  <CareP>{plant.watering}</CareP>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Temp max °C: </CareSpanTitle>\n                  <CareSpan>{plant.tempmax.celsius}</CareSpan>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Temp min °C: </CareSpanTitle>\n                  <CareSpan>{plant.tempmin.celsius}</CareSpan>\n                </CareLi>\n                <CareLi>\n                  <CareSpanTitle>Use: </CareSpanTitle>\n                  <CareSpan>{plant.use.join(', ')}</CareSpan>\n                </CareLi>\n              </CareUl>\n            ))}\n        </ListContainer>\n      </CareContainer>\n    </CareSection>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { cleanHeaderBottom } from 'redux/header_bottom/operation';\nimport { Care } from '../components/Care/Care';\n\nconst CarePage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(cleanHeaderBottom());\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"HomeForest Care\" description=\"Care of your plants\" />\n      <Care />\n    </>\n  );\n};\n\nexport default CarePage;\n"],"names":["CareSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","breakpoints","tablet","CareContainer","Container","_templateObject2","ListContainer","div","_templateObject3","CareUl","ul","_templateObject4","CareLi","li","_templateObject5","CareSpanTitle","span","_templateObject6","fontSizes","extra","colors","darkGreen","fonts","CareSpan","_templateObject7","large","brown","CareP","p","_templateObject8","List","_templateObject9","ListItem","_templateObject10","green","fon","beige","TitleHeading","_templateObject11","Care","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","products","setProducts","_useState5","_useState6","plant","setPlant","_useState7","setError","arraOfNames","map","item","push","apply","_toConsumableArray","common","uniqArr","Array","from","Set","trim","useEffect","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getCareList","data","wrap","_context","prev","next","getCareList","sent","abrupt","onFetchError","t","t0","finish","stop","arguments","_jsxs","children","_jsx","toUpperCase","it","index","slice","toLowerCase","style","cursor","onClick","e","preventDefault","plantForSearch","i","_item$common","length","currentTarget","innerText","handleChoicePlant","onLoading","onLoaded","fontWeight","join","category","family","latin","origin","ideallight","toleratedlight","watering","tempmax","celsius","tempmin","use","id","dispatch","useDispatch","cleanHeaderBottom","_Fragment","SEO","title","description"],"sourceRoot":""}