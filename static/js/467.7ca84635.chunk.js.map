{"version":3,"file":"static/js/467.7ca84635.chunk.js","mappings":"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","sources":["components/Care/Care.styled.js","components/Care/Care.jsx","pages/Care.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Container, Section } from 'components/baseStyles/CommonStyle.styled';\n\nconst CareSection = styled(Section)`\n  padding-top: 122px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding-top: 154px;\n  }\n`;\n\nconst CareContainer = styled(Container)`\n  margin: 0 auto;\n  width: 100%;\n`;\nexport { CareSection, CareContainer };\n","import React from 'react';\nimport { getCareList } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'components/helpers/Loader/Loader';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CareContainer, CareSection } from './Care.styled';\n\nexport const Care = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [products, setProducts] = useState(false);\n  const [, setError] = useState(null);\n\n  const alphabet = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ];\n  let arraOfNames = [];\n  if (products) {\n    products.map(item => {\n      arraOfNames.push(...item.common);\n    });\n  }\n  let uniqArr = Array.from(new Set(arraOfNames.map(item => item.trim())));\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await getCareList(`/care`);\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n        setProducts(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n  return (\n    <CareSection>\n      <CareContainer>\n        <h1>CARE</h1>\n        <div>\n          {products &&\n            alphabet.map(item => (\n              <ul key={item}>\n                {item}\n                {arraOfNames &&\n                  uniqArr.map(it => {\n                    if (it?.slice(0, 1).toLowerCase() === item)\n                      return <li key={it.id}>{it}</li>;\n                  })}\n              </ul>\n            ))}\n        </div>\n        {isLoading ? onLoading() : onLoaded()}\n      </CareContainer>\n    </CareSection>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { cleanHeaderBottom } from 'redux/header_bottom/operation';\nimport { Care } from '../components/Care/Care';\n\nconst CarePage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(cleanHeaderBottom());\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"HomeForest Care\" description=\"Care of your plants\" />\n      <Care />\n    </>\n  );\n};\n\nexport default CarePage;\n"],"names":["CareSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","breakpoints","tablet","CareContainer","Container","_templateObject2","Care","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","products","setProducts","_useState5","setError","arraOfNames","map","item","push","apply","_toConsumableArray","common","uniqArr","Array","from","Set","trim","useEffect","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getCareList","data","wrap","_context","prev","next","getCareList","sent","abrupt","onFetchError","t","t0","finish","stop","arguments","_jsx","children","_jsxs","it","slice","toLowerCase","id","onLoading","onLoaded","dispatch","useDispatch","cleanHeaderBottom","_Fragment","SEO","title","description"],"sourceRoot":""}