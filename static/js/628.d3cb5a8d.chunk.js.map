{"version":3,"file":"static/js/628.d3cb5a8d.chunk.js","mappings":"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","sources":["components/Schemas/schemas.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require field'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Password must match')\n    .required('Require field'),\n  name: Yup.string()\n    .matches(/\\S{2,}/, 'Name too short (min 2)')\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      'Name must includes only Latin alphabet',\n    )\n    .required('Require field'),\n  phone: Yup.number()\n    .nullable(true)\n    .required('Require field')\n    .min(99999)\n    .max(999999999999),\n  location: Yup.string()\n    .matches(\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Require field'),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require'),\n});\n\nconst changePasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n});\n\n// const noticeSchemaFirst = Yup.object().shape({\n//   category: Yup.string().required('Category is Required!'),\n//   typeofpet: Yup.string().required('Type of Pet is Required!'),\n//   title: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(48, 'Too Long!')\n//     .required('Title is Required!'),\n//   name: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(16, 'Too Long!')\n//     .required('Name is Required!'),\n//   birthday: Yup.date().required('BirthDay is Required!'),\n//   breed: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(34, 'Too Long!')\n//     .required('Breed is Required!'),\n// });\n// const noticeSchemaSecond = Yup.object().shape({\n//   sex: Yup.string().required('Sex is Required!'),\n//   size: Yup.string().required('Size is Required!'),\n//   height: Yup.number()\n//     .moreThan('0')\n//     .positive()\n//     .integer()\n//     .max(100, 'Too Match!')\n//     .required('Height is Required!'),\n//   weight: Yup.number()\n//     .moreThan('0')\n//     .positive()\n//     .max(100, 'Too Match!')\n//     .required('Weight is Required!'),\n//   location: Yup.string()\n//     .matches(\n//       /(([0-9A-Za-zsd&.-]){1,}, ([0-9A-Za-zsd&,.-]){1,})/,\n//       'Invalid format. Example: Brovary, Kyiv ...',\n//     )\n//     .required('Location is Required!'),\n// });\n\n// const noticeSchemaSecondPrice = noticeSchemaSecond.concat(\n//   Yup.object().shape({\n//     price: Yup.number()\n//       .moreThan('0')\n//       .positive()\n//       .integer()\n//       .required('Price is Required!'),\n//     currency: Yup.string().required('Currency is Required!'),\n//   }),\n// );\n\n// const noticeSchemaThird = Yup.object().shape({\n//   imageUrl: Yup.string().required('Image is Required!'),\n//   imageUrl_1: Yup.string(),\n//   imageUrl_2: Yup.string(),\n//   passport: Yup.string().required('Passport is Required!'),\n//   sterilization: Yup.string().required('Sterilization is Required!'),\n//   lives: Yup.string().required('Lives is Required!'),\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\n// const noticeSchemaThirdforEdit = Yup.object().shape({\n//   imageUrl: Yup.string(),\n//   imageUrl_1: Yup.string(),\n//   imageUrl_2: Yup.string(),\n//   passport: Yup.string().required('Passport is Required!'),\n//   sterilization: Yup.string().required('Sterilization is Required!'),\n//   lives: Yup.string().required('Lives is Required!'),\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\n// const addPetsUser = Yup.object().shape({\n//   name: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(16, 'Too Long!')\n//     .required('Name is Required!'),\n\n//   data: Yup.date().required('BirthDay is Required!'),\n\n//   breed: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(34, 'Too Long!')\n//     .required('Breed is Required!'),\n\n//   // imageUrl: Yup.mixed().required('Photo is Required!'),\n\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  changePasswordSchema,\n};\n\nexport default schemas;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\nimport { Button } from 'components/helpers/ButtonSplit/ButtonSplit.styled';\nimport { Title } from 'components/baseStyles/CommonStyle.styled';\nimport theme from 'components/baseStyles/Variables.styled';\n\nconst FormSection = styled.section`\n  @media screen and (max-width: ${theme.breakpoints.tablet_max}) {\n    background-repeat: no-repeat;\n    background-size: 620px auto;\n    background-position: bottom -250px left 30%;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints\n      .tablet}) and (max-width: ${theme.breakpoints.desktop_max}) {\n    background-repeat: no-repeat;\n    background-size: 1396px auto;\n    background-position: bottom -130px left 50%;\n  }\n`;\n\nconst FormContainer = styled.div`\n  height: 100%;\n  min-height: calc(100vh - 140px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding-top: 170px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-top: 80px;\n    min-height: calc(100vh - 120px);\n\n    background-repeat: no-repeat;\n    background-size: 1280px auto;\n    background-position: bottom 0 left 50%;\n  }\n`;\n\nconst TitleLogin = styled(Title)`\n  margin-bottom: 40px;\n  margin-top: 0;\n  text-transform: uppercase;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: ${theme.fontSizes.extraXL};\n    font-weight: 500;\n    margin-bottom: 32px;\n    color: ${theme.colors.brown1};\n  }\n`;\nexport const IconValid = styled(FaCheck)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const IconInValid = styled(FaTimes)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nconst FormLogin = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 608px;\n    height: 100%;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: transparent;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n`;\nconst ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nconst Input = styled(Field)`\n  width: 280px;\n  font-size: ${theme.fontSizes.small};\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: ${theme.colors.blue1};\n  color: ${theme.colors.brown2};\n  border: none;\n  transition: all 0.25s ease-in;\n  &:focus,\n  &:hover {\n    border-color: ${theme.colors.darkGreen};\n    color: ${theme.colors.darkGreen};\n    outline: none;\n  }\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 448px;\n    font-size: ${theme.fontSizes.medium};\n    padding: 14px 0 13px 32px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 558px;\n  }\n  &::placeholder {\n    text-transform: uppercase;\n  }\n  &:focus ~ .floating-label,\n  &:not([value='']):not(:focus):invalid ~ .floating-label,\n  &:not([value='']):not(:focus):valid ~ .floating-label {\n    top: -15px;\n    left: 20px;\n    font-size: 11px;\n    opacity: 1;\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  font-family: ${theme.fonts[0]};\n  font-size: ${theme.fontSizes.small};\n  text-transform: uppercase;\n  pointer-events: none;\n  left: 20px;\n  top: 18px;\n  transition: 0.2s ease all;\n`;\n\nconst Btn = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border-radius: 4px;\n  color: ${theme.colors.brown1};\n  background: ${theme.colors.green4};\n  transform: scale(1);\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n    color: ${theme.colors.white};\n    background: ${theme.colors.brown2};\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n`;\nconst ErrorBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: -5px;\n  left: 15px;\n  color: #e53e3e;\n  font-family: ${theme.fonts[1]};\n  font-size: ${theme.fontSizes.small};\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n  margin-bottom: -16px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    left: 32px;\n  }\n`;\n\nconst Div = styled.div`\n  margin-bottom: 32px;\n`;\nconst BtnContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 280px;\n  margin-bottom: 32px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 448px;\n    font-size: ${theme.fontSizes.medium};\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 558px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  margin-bottom: 10px;\n  color: ${theme.colors.brown2};\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    color: ${theme.colors.brown3};\n  }\n`;\n\nconst BoxText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: ${theme.fontSizes.small};\n  letter-spacing: 0.04em;\n  color: ${theme.brown2};\n`;\n\nexport {\n  FormSection,\n  FormContainer,\n  TitleLogin,\n  FormLogin,\n  ShowPassword,\n  Input,\n  Btn,\n  StyledLink,\n  BoxText,\n  ErrorBox,\n  Div,\n  BtnContainer,\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport schemas from 'components/Schemas/schemas';\nimport theme from 'components/baseStyles/Variables.styled';\n\nimport {\n  FormSection,\n  FormContainer,\n  FormLogin,\n  ShowPassword,\n  Input,\n  Btn,\n  StyledLink,\n  BoxText,\n  IconValid,\n  IconInValid,\n  ErrorBox,\n  Div,\n  TitleLogin,\n  BtnContainer,\n  Span,\n} from './LoginForm.styled';\nimport { logIn } from 'redux/auth/operations';\n// import { useTranslation } from 'react-i18next';\n\nexport const LoginForm = () => {\n  const [isShown, setIsShown] = useState(true); //\n  const [showPass, setShowPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  // const { t } = useTranslation();\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const onSubmit = values => {\n    setIsLoading(true);\n    const { email, password } = values;\n    dispatch(\n      logIn({\n        email,\n        password,\n      }),\n      hideForm(),\n    );\n    setIsLoading(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schemas.schemasLogin,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    formik.values.email === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.schemasLogin}>\n          <FormLogin onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleLogin>{'Login Page'}</TitleLogin>\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.email,\n                      formik.errors.email,\n                    ),\n                  }}\n                  name=\"email\"\n                  type=\"email\"\n                  validate={schemas.schemasLogin.email}\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  onBlur={formik.handleBlur}\n                />\n                {!formik.values.email ? null : !formik.errors.email ? (\n                  <IconValid color={theme.colors.green} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.email || formik.touched.email ? (\n                  <ErrorBox>{formik.errors.email}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Email</Span>\n              </Div>\n            )}\n\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.password,\n                      formik.errors.password,\n                    ),\n                  }}\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrorBox>{formik.errors.password}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Password</Span>\n              </Div>\n            )}\n            <BtnContainer>\n              {isShown && (\n                <Btn type=\"submit\" disabled={isValid}>\n                  {isLoading ? 'Loading' : 'Sign In'}\n                </Btn>\n              )}\n\n              {!isShown && (\n                <Btn type=\"submit\">{isLoading ? 'Loading' : 'Sign In'}</Btn>\n              )}\n              <BoxText>\n                <StyledLink to=\"/register\">{'Create acount'}</StyledLink>\n                <StyledLink to=\"/forgot_password\">\n                  {'Forgot your password?'}\n                </StyledLink>\n              </BoxText>\n            </BtnContainer>\n          </FormLogin>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport { useEffect } from 'react';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"HomeForest Log in\" description=\"Log in to your account\" />\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["schemas","registerSchema","Yup","shape","email","matches","required","password","min","max","confirmPassword","oneOf","name","phone","nullable","location","schemasLogin","changePasswordSchema","FormSection","styled","section","_templateObject","_taggedTemplateLiteral","theme","breakpoints","tablet_max","tablet","desktop_max","FormContainer","div","_templateObject2","desktop","TitleLogin","Title","_templateObject3","fontSizes","extraXL","colors","brown1","IconValid","FaCheck","_templateObject4","IconInValid","FaTimes","_templateObject5","FormLogin","Form","_templateObject6","ShowPassword","span","_templateObject7","Input","Field","_templateObject8","small","blue1","brown2","darkGreen","medium","Span","_templateObject9","fonts","Btn","Button","_templateObject10","green4","white","ErrorBox","_templateObject11","Div","_templateObject12","BtnContainer","_templateObject13","StyledLink","Link","_templateObject14","brown3","BoxText","_templateObject15","LoginForm","_useState","useState","_useState2","_slicedToArray","isShown","setIsShown","_useState3","_useState4","showPass","setShowPass","_useState5","_useState6","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","logIn","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","concat","red","_jsx","children","Formik","_jsxs","handleSubmit","autoComplete","style","borderColor","type","validate","onChange","handleChange","value","onBlur","handleBlur","color","green","className","onClick","ImEye","ImEyeBlocked","disabled","to","useEffect","addHeaderBottom","headerBottom","_Fragment","SEO","title","description"],"sourceRoot":""}