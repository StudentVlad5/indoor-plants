{"version":3,"file":"static/js/649.073366c5.chunk.js","mappings":"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","sources":["components/Schemas/schemas.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require field'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Password must match')\n    .required('Require field'),\n  name: Yup.string()\n    .matches(/\\S{2,}/, 'Name too short (min 2)')\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      'Name must includes only Latin alphabet',\n    )\n    .required('Require field'),\n  phone: Yup.number()\n    .nullable(true)\n    .required('Require field')\n    .min(99999)\n    .max(999999999999),\n  location: Yup.string()\n    .matches(\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Require field'),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require'),\n});\n\nconst noticeSchemaFirst = Yup.object().shape({\n  category: Yup.string().required('Category is Required!'),\n  typeofpet: Yup.string().required('Type of Pet is Required!'),\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(48, 'Too Long!')\n    .required('Title is Required!'),\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Name is Required!'),\n  birthday: Yup.date().required('BirthDay is Required!'),\n  breed: Yup.string()\n    .min(2, 'Too Short!')\n    .max(34, 'Too Long!')\n    .required('Breed is Required!'),\n});\nconst noticeSchemaSecond = Yup.object().shape({\n  sex: Yup.string().required('Sex is Required!'),\n  size: Yup.string().required('Size is Required!'),\n  height: Yup.number()\n    .moreThan('0')\n    .positive()\n    .integer()\n    .max(100, 'Too Match!')\n    .required('Height is Required!'),\n  weight: Yup.number()\n    .moreThan('0')\n    .positive()\n    .max(100, 'Too Match!')\n    .required('Weight is Required!'),\n  location: Yup.string()\n    .matches(\n      /(([0-9A-Za-zsd&.-]){1,}, ([0-9A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Location is Required!'),\n});\n\nconst noticeSchemaSecondPrice = noticeSchemaSecond.concat(\n  Yup.object().shape({\n    price: Yup.number()\n      .moreThan('0')\n      .positive()\n      .integer()\n      .required('Price is Required!'),\n    currency: Yup.string().required('Currency is Required!'),\n  }),\n);\n\nconst noticeSchemaThird = Yup.object().shape({\n  imageUrl: Yup.string().required('Image is Required!'),\n  imageUrl_1: Yup.string(),\n  imageUrl_2: Yup.string(),\n  passport: Yup.string().required('Passport is Required!'),\n  sterilization: Yup.string().required('Sterilization is Required!'),\n  lives: Yup.string().required('Lives is Required!'),\n  comments: Yup.string()\n    .min(8, 'Too Short!')\n    .max(120, 'Too Long!')\n    .required('Comments are Required!'),\n});\n\nconst noticeSchemaThirdforEdit = Yup.object().shape({\n  imageUrl: Yup.string(),\n  imageUrl_1: Yup.string(),\n  imageUrl_2: Yup.string(),\n  passport: Yup.string().required('Passport is Required!'),\n  sterilization: Yup.string().required('Sterilization is Required!'),\n  lives: Yup.string().required('Lives is Required!'),\n  comments: Yup.string()\n    .min(8, 'Too Short!')\n    .max(120, 'Too Long!')\n    .required('Comments are Required!'),\n});\n\nconst addPetsUser = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Name is Required!'),\n\n  data: Yup.date().required('BirthDay is Required!'),\n\n  breed: Yup.string()\n    .min(2, 'Too Short!')\n    .max(34, 'Too Long!')\n    .required('Breed is Required!'),\n\n  // imageUrl: Yup.mixed().required('Photo is Required!'),\n\n  comments: Yup.string()\n    .min(8, 'Too Short!')\n    .max(120, 'Too Long!')\n    .required('Comments are Required!'),\n});\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  noticeSchemaFirst,\n  noticeSchemaSecond,\n  noticeSchemaSecondPrice,\n  noticeSchemaThird,\n  noticeSchemaThirdforEdit,\n  addPetsUser,\n};\n\nexport default schemas;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\nimport { Title } from 'components/baseStyles/CommonStyle.styled';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Button } from 'components/helpers/ButtonSplit/ButtonSplit.styled';\n\nexport const FormSection = styled.section`\n  @media screen and (max-width: ${theme.breakpoints.tablet_max}) {\n    background-repeat: no-repeat;\n    background-size: 620px auto;\n    background-position: bottom -250px left 30%;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints\n      .tablet}) and (max-width: ${theme.breakpoints.desktop_max}) {\n    background-repeat: no-repeat;\n    background-size: 1396px auto;\n    background-position: bottom -130px left 50%;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  height: 100%;\n  min-height: calc(100vh - 140px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: ${theme.breakpoints.tablet}) {\n    padding-top: 170px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-top: 44px;\n    min-height: calc(100vh - 120px);\n\n    background-repeat: no-repeat;\n    background-size: 1280px auto;\n    background-position: bottom 0 left 50%;\n  }\n`;\nexport const TitleRegister = styled(Title)`\n  margin-bottom: 40px;\n  margin-top: 0;\n  text-transform: uppercase;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: ${theme.fontSizes.extraXL};\n    font-weight: 500;\n    margin-bottom: 32px;\n    color: ${theme.colors.brown1};\n  }\n`;\n\nexport const TitleLogo = styled(Title)`\n  font-family: ${theme.fonts[0]};\n  font-weight: 700;\n  font-style: normal;\n  font-size: ${theme.fontSizes.extraXL};\n  line-height: 42px;\n  letter-spacing: 0.07em;\n  color: ${theme.colors.brown2};\n  text-decoration: none;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    line-height: 48px;\n    font-size: ${theme.fontSizes.extraXXL};\n  }\n`;\n\nexport const FormRegister = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 608px;\n    height: 100%;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n`;\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport const IconValid = styled(FaCheck)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const IconInValid = styled(FaTimes)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 30px;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: ${theme.fontSizes.small};\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  margin-bottom: 0px;\n  background: ${theme.colors.blue1};\n  color: ${theme.colors.brown2};\n  border: none;\n  transition: all 0.25s ease-in;\n  &:focus,\n  &:hover {\n    border-color: ${theme.colors.darkGreen};\n    color: ${theme.colors.darkGreen};\n    outline: none;\n  }\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 448px;\n    font-size: ${theme.fontSizes.medium};\n    padding: 14px 0 13px 32px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 558px;\n  }\n  &::placeholder {\n    text-transform: uppercase;\n  }\n  &:focus ~ .floating-label,\n  &:not([value='']):not(:focus):invalid ~ .floating-label,\n  &:not([value='']):not(:focus):valid ~ .floating-label {\n    top: -15px;\n    left: 20px;\n    font-size: 11px;\n    opacity: 1;\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  font-family: ${theme.fonts[0]};\n  font-size: ${theme.fontSizes.small};\n  text-transform: uppercase;\n  pointer-events: none;\n  left: 20px;\n  top: 18px;\n  transition: 0.2s ease all;\n`;\n\nexport const Btn = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  width: 125px;\n  border-radius: 4px;\n  color: ${theme.colors.brown1};\n  background: ${theme.colors.green4};\n  transform: scale(1);\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n    color: ${theme.colors.white};\n    background: ${theme.colors.brown2};\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 180px;\n  }\n`;\nexport const BackButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 125px;\n  border: none;\n  border-radius: 4px;\n  color: ${theme.colors.brown1};\n  background: ${theme.colors.green4};\n  transform: scale(1);\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n    color: ${theme.colors.white};\n    background: ${theme.colors.brown2};\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 180px;\n  }\n`;\n\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: -5px;\n  left: 60%;\n  color: #e53e3e;\n  font-family: ${theme.fonts[1]};\n  font-size: ${theme.fontSizes.small};\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n  margin-bottom: -16px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    /* left: 32px; */\n  }\n`;\n\nexport const Div = styled.div`\n  margin-bottom: 32px;\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 280px;\n  margin-bottom: 32px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 448px;\n    font-size: ${theme.fontSizes.medium};\n    flex-direction: row;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 558px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${theme.colors.brown2};\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    color: ${theme.colors.brown3};\n  }\n`;\nexport const BoxText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: ${theme.fontSizes.small};\n  letter-spacing: 0.04em;\n  color: ${theme.brown2};\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport schemas from 'components/Schemas/schemas';\nimport { register } from 'redux/auth/operations';\nimport theme from 'components/baseStyles/Variables.styled';\nimport {\n  FormRegister,\n  FormContainer,\n  Input,\n  Btn,\n  TitleRegister,\n  BackButton,\n  ShowPassword,\n  StyledLink,\n  BoxText,\n  IconValid,\n  IconInValid,\n  ErrBox,\n  Div,\n  FormSection,\n  TitleLogo,\n  BtnContainer,\n  Span,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ values }) => {\n    setIsLoading(true);\n    const { name: userName, email, password, phone, location } = values;\n    dispatch(\n      register({\n        userName,\n        email,\n        password,\n        phone,\n        location,\n      }),\n    );\n  };\n\n  const showForm = () => {\n    setIsShown(false);\n  };\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phone: '',\n      location: '',\n    },\n    validationSchema: schemas.registerSchema,\n    onSubmit: (values, action) => {\n      onSubmit({ values, action });\n    },\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\n    formik.values.email === '' ||\n    formik.values.confirmPassword === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.registerSchema}>\n          <FormRegister onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleLogo>{'homeforest'}</TitleLogo>\n            <TitleRegister>{'Register'}</TitleRegister>\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.email,\n                      formik.errors.email,\n                    ),\n                  }}\n                  name=\"email\"\n                  type=\"email\"\n                  value={formik.values.email}\n                  validate={schemas.registerSchema.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n\n                {!formik.values.email ? null : !formik.errors.email ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.email && formik.touched.email ? (\n                  <ErrBox>{formik.errors.email}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Email</Span>\n              </Div>\n            )}\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.password,\n                      formik.errors.password,\n                    ),\n                  }}\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrBox>{formik.errors.password}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Password</Span>\n              </Div>\n            )}\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.confirmPassword,\n                      formik.errors.confirmPassword,\n                    ),\n                  }}\n                  name=\"confirmPassword\"\n                  type={showConfirmPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.confirmPassword}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showConfirmPassword}>\n                  {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.confirmPassword &&\n                formik.touched.confirmPassword ? (\n                  <ErrBox>{formik.errors.confirmPassword}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Confirm Password</Span>\n              </Div>\n            )}\n            {isShown && (\n              <BtnContainer>\n                <Btn type=\"button\" onClick={showForm} disabled={isValid}>\n                  {'Next'}\n                </Btn>\n                <BoxText>\n                  <span>{'Already have an account?'}</span>\n                  <StyledLink to=\"/signin\">{'Sign In'}</StyledLink>\n                </BoxText>\n              </BtnContainer>\n            )}\n            {!isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.name,\n                      formik.errors.name,\n                    ),\n                  }}\n                  name=\"name\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                  onBlur={formik.handleBlur}\n                />\n                {!formik.values.name ? null : !formik.errors.name ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.name && formik.touched.name ? (\n                  <ErrBox>{formik.errors.name}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Name</Span>\n              </Div>\n            )}\n            {!isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.location,\n                      formik.errors.location,\n                    ),\n                  }}\n                  name=\"location\"\n                  type=\"text\"\n                  value={formik.values.location}\n                  onBlur={formik.handleBlur}\n                  onChange={e => {\n                    formik.handleChange(e);\n                  }}\n                />\n                {!formik.values.location ? null : !formik.errors.location ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n\n                {formik.errors.location && formik.touched.location ? (\n                  <ErrBox>{formik.errors.location}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Location, region</Span>\n              </Div>\n            )}\n            {!isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.phone,\n                      formik.errors.phone,\n                    ),\n                  }}\n                  id=\"phone\"\n                  type=\"phone\"\n                  onChange={formik.handleChange}\n                  value={formik.values.phone}\n                  onBlur={formik.handleBlur}\n                  name=\"phone\"\n                />\n                {!formik.values.phone ? null : !formik.errors.phone ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.phone && formik.touched.phone ? (\n                  <ErrBox>{formik.errors.phone}</ErrBox>\n                ) : null}\n                <Span className=\"floating-label\">Mobile phone</Span>\n              </Div>\n            )}\n            {!isShown && (\n              <BtnContainer>\n                <Btn type=\"submit\">{isLoading ? 'Loading' : 'Register'}</Btn>\n                <BackButton type=\"button\" onClick={hideForm}>\n                  {'Back'}\n                </BackButton>\n                <BoxText>\n                  <span>{'Already have an account?'}</span>{' '}\n                  <StyledLink to=\"/signin\">{'Sign In'}</StyledLink>\n                </BoxText>\n              </BtnContainer>\n            )}\n          </FormRegister>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport { useEffect } from 'react';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"HomeForest Register\" description=\"Register your account\" />\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["registerSchema","Yup","shape","email","matches","required","password","min","max","confirmPassword","oneOf","name","phone","nullable","location","schemasLogin","noticeSchemaFirst","category","typeofpet","title","birthday","breed","noticeSchemaSecond","sex","size","height","moreThan","positive","integer","weight","noticeSchemaSecondPrice","concat","price","currency","schemas","noticeSchemaThird","imageUrl","imageUrl_1","imageUrl_2","passport","sterilization","lives","comments","noticeSchemaThirdforEdit","addPetsUser","data","FormSection","styled","theme","FormContainer","TitleRegister","Title","TitleLogo","FormRegister","Form","ShowPassword","IconValid","FaCheck","IconInValid","FaTimes","Input","Field","Span","Btn","Button","BackButton","ErrBox","Div","BtnContainer","StyledLink","Link","BoxText","useState","isShown","setIsShown","showPass","setShowPass","showConfirmPass","setShowConfirmPass","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","action","userName","register","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","handleSubmit","autoComplete","style","borderColor","type","value","validate","onChange","handleChange","onBlur","handleBlur","color","className","onClick","disabled","to","e","id","useEffect","addHeaderBottom","headerBottom","SEO","description"],"sourceRoot":""}