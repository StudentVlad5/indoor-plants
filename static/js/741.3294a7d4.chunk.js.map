{"version":3,"file":"static/js/741.3294a7d4.chunk.js","mappings":"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","sources":["components/Auth/AuthForm.styled.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\nimport { Button } from 'components/helpers/ButtonSplit/ButtonSplit.styled';\nimport {\n  Container,\n  Section,\n  Title,\n} from 'components/baseStyles/CommonStyle.styled';\nimport theme from 'components/baseStyles/Variables.styled';\n\nconst FormSection = styled(Section)`\n  padding-top: 123px;\n  padding-bottom: 0;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding-top: 129px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-bottom: 110px;\n  }\n`;\n\nconst FormContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 40px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding-top: 68px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-top: 141px;\n  }\n`;\n\nconst FormTitle = styled(Title)`\n  margin-bottom: 40px;\n  margin-top: 0;\n  text-transform: uppercase;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: ${theme.fontSizes.extraXL};\n    font-weight: 500;\n    margin-bottom: 32px;\n    color: ${theme.colors.brown1};\n  }\n`;\n\nconst StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n\n  margin: 0 auto;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    margin: 0 auto;\n    background-color: transparent;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 40px;\n  }\n  & > div {\n    position: relative;\n  }\n`;\n\nconst Input = styled(Field)`\n  width: calc(100vw - 60px);\n  max-width: 400px;\n  padding: 11px 0 12px 14px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: normal;\n  text-transform: uppercase;\n  color: ${theme.colors.brown2};\n  background: ${theme.colors.blue1};\n\n  border: none;\n  transition: ${theme.transition[0]};\n\n  &:focus,\n  &:hover {\n    border-color: ${theme.colors.darkGreen};\n    color: ${theme.colors.darkGreen};\n    outline: none;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 450px;\n    max-width: 450px;\n    font-size: ${theme.fontSizes.medium};\n    padding: 14px 0 13px 32px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 600px;\n    max-width: 600px;\n  }\n\n  &::placeholder {\n    text-transform: uppercase;\n  }\n\n  &:focus ~ .floating-label,\n  &:not([value='']):not(:focus):invalid ~ .floating-label,\n  &:not([value='']):not(:focus):valid ~ .floating-label {\n    top: -15px;\n    left: 20px;\n    font-size: 11px;\n    opacity: 1;\n  }\n`;\n\nconst ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n\n  cursor: pointer;\n\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nconst Span = styled.span`\n  position: absolute;\n  left: 20px;\n  top: 13px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: ${theme.fontSizes.small};\n  text-transform: uppercase;\n  pointer-events: none;\n\n  transition: ${theme.transition[0]};\n`;\n\nconst IconValid = styled(FaCheck)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nconst IconInValid = styled(FaTimes)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nconst Btn = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: normal;\n  text-transform: uppercase;\n  color: ${theme.colors.brown1};\n\n  border: none;\n  border-radius: 4px;\n  background: ${theme.colors.green3};\n\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: ${theme.transition[0]};\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background: ${theme.colors.brown2};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: auto;\n  }\n`;\n\nconst ErrorBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: -5px;\n  left: 15px;\n  margin-bottom: -16px;\n  color: #e53e3e;\n\n  font-family: ${theme.fonts[1]};\n  font-size: ${theme.fontSizes.small};\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    left: 32px;\n  }\n`;\n\nconst BtnContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 450px;\n    font-size: ${theme.fontSizes.medium};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 600px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${theme.colors.brown2};\n  transition: ${theme.transition[0]};\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.brown3};\n  }\n`;\n\nconst BoxText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  gap: 10px;\n\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: ${theme.fontSizes.small};\n  letter-spacing: 0.04em;\n  color: ${theme.brown2};\n`;\n\nexport {\n  FormSection,\n  FormContainer,\n  FormTitle,\n  StyledForm,\n  Input,\n  Span,\n  ShowPassword,\n  IconValid,\n  IconInValid,\n  Btn,\n  StyledLink,\n  BoxText,\n  ErrorBox,\n  BtnContainer,\n};\n","import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Button } from 'components/helpers/ButtonSplit/ButtonSplit.styled';\nimport { FormTitle, StyledForm } from '../AuthForm.styled';\n\nexport const TitleRegister = styled(FormTitle)``;\n\nexport const FormRegister = styled(StyledForm)``;\n\nexport const BackButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 125px;\n\n  color: ${theme.colors.brown1};\n  background: ${theme.colors.green4};\n  border: none;\n  border-radius: 4px;\n  transform: scale(1);\n\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: ${theme.transition[0]};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n    color: ${theme.colors.white};\n    background: ${theme.colors.brown2};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 180px;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport schemas from 'utils/schemas';\nimport { register } from 'redux/auth/operations';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { BackButton, FormRegister, TitleRegister } from './RegisterForm.styled';\nimport {\n  BoxText,\n  Btn,\n  BtnContainer,\n  ErrorBox,\n  FormContainer,\n  FormSection,\n  IconInValid,\n  IconValid,\n  Input,\n  ShowPassword,\n  Span,\n  StyledLink,\n} from '../AuthForm.styled';\n\nconst RegisterForm = () => {\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ values }) => {\n    setIsLoading(true);\n    const { name: userName, email, password, phone, location } = values;\n    dispatch(\n      register({\n        userName,\n        email,\n        password,\n        phone,\n        location,\n      }),\n    );\n    setIsLoading(false);\n  };\n\n  const showForm = () => {\n    setIsShown(false);\n  };\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phone: '',\n      location: '',\n    },\n    validationSchema: schemas.registerSchema,\n    onSubmit: (values, action) => {\n      onSubmit({ values, action });\n    },\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\n    formik.values.email === '' ||\n    formik.values.confirmPassword === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.registerSchema}>\n          <FormRegister onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleRegister>{'Register'}</TitleRegister>\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.email,\n                      formik.errors.email,\n                    ),\n                  }}\n                  name=\"email\"\n                  type=\"email\"\n                  value={formik.values.email}\n                  validate={schemas.registerSchema.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n\n                {!formik.values.email ? null : !formik.errors.email ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.email && formik.touched.email ? (\n                  <ErrorBox>{formik.errors.email}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Email</Span>\n              </div>\n            )}\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.password,\n                      formik.errors.password,\n                    ),\n                  }}\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrorBox>{formik.errors.password}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Password</Span>\n              </div>\n            )}\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.confirmPassword,\n                      formik.errors.confirmPassword,\n                    ),\n                  }}\n                  name=\"confirmPassword\"\n                  type={showConfirmPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.confirmPassword}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showConfirmPassword}>\n                  {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.confirmPassword &&\n                formik.touched.confirmPassword ? (\n                  <ErrorBox>{formik.errors.confirmPassword}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Confirm Password</Span>\n              </div>\n            )}\n            {isShown && (\n              <BtnContainer>\n                <Btn type=\"button\" onClick={showForm} disabled={isValid}>\n                  {'Next'}\n                </Btn>\n                <BoxText>\n                  <span>{'Already have an account?'}</span>\n                  <StyledLink to=\"/signin\">{'Sign In'}</StyledLink>\n                </BoxText>\n              </BtnContainer>\n            )}\n            {!isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.name,\n                      formik.errors.name,\n                    ),\n                  }}\n                  name=\"name\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                  onBlur={formik.handleBlur}\n                />\n                {!formik.values.name ? null : !formik.errors.name ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.name && formik.touched.name ? (\n                  <ErrorBox>{formik.errors.name}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Name</Span>\n              </div>\n            )}\n            {!isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.location,\n                      formik.errors.location,\n                    ),\n                  }}\n                  name=\"location\"\n                  type=\"text\"\n                  value={formik.values.location}\n                  onBlur={formik.handleBlur}\n                  onChange={e => {\n                    formik.handleChange(e);\n                  }}\n                />\n                {!formik.values.location ? null : !formik.errors.location ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n\n                {formik.errors.location && formik.touched.location ? (\n                  <ErrorBox>{formik.errors.location}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Location, region</Span>\n              </div>\n            )}\n            {!isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.phone,\n                      formik.errors.phone,\n                    ),\n                  }}\n                  id=\"phone\"\n                  type=\"phone\"\n                  onChange={formik.handleChange}\n                  value={formik.values.phone}\n                  onBlur={formik.handleBlur}\n                  name=\"phone\"\n                />\n                {!formik.values.phone ? null : !formik.errors.phone ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.phone && formik.touched.phone ? (\n                  <ErrorBox>{formik.errors.phone}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Mobile phone</Span>\n              </div>\n            )}\n            {!isShown && (\n              <BtnContainer>\n                <Btn type=\"submit\" aria-label=\"submit registration\">\n                  {isLoading ? 'Loading' : 'Register'}\n                </Btn>\n                <BackButton\n                  type=\"button\"\n                  aria-label=\"back button\"\n                  onClick={hideForm}\n                >\n                  {'Back'}\n                </BackButton>\n                <BoxText>\n                  <span>{'Already have an account?'}</span>{' '}\n                  <StyledLink to=\"/signin\">{'Sign In'}</StyledLink>\n                </BoxText>\n              </BtnContainer>\n            )}\n          </FormRegister>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SEO } from 'utils/SEO';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport RegisterForm from 'components/Auth/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"HomeForest Register\" description=\"Register your account\" />\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["FormSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","breakpoints","tablet","desktop","FormContainer","Container","_templateObject2","FormTitle","Title","_templateObject3","fontSizes","extraXL","colors","brown1","StyledForm","Form","_templateObject4","Input","Field","_templateObject5","fonts","brown2","blue1","transition","darkGreen","medium","ShowPassword","span","_templateObject6","Span","_templateObject7","small","IconValid","FaCheck","_templateObject8","IconInValid","FaTimes","_templateObject9","Btn","Button","_templateObject10","green3","white","ErrorBox","div","_templateObject11","BtnContainer","_templateObject12","StyledLink","Link","_templateObject13","brown3","BoxText","_templateObject14","TitleRegister","FormRegister","BackButton","green4","_useState","useState","_useState2","_slicedToArray","isShown","setIsShown","_useState3","_useState4","showPass","setShowPass","_useState5","_useState6","showConfirmPass","setShowConfirmPass","_useState7","_useState8","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","confirmPassword","phone","location","validationSchema","schemas","registerSchema","onSubmit","values","action","_ref","userName","register","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","concat","red","_jsx","children","Formik","_jsxs","handleSubmit","autoComplete","style","borderColor","type","value","validate","onChange","handleChange","onBlur","handleBlur","color","green1","className","onClick","ImEye","ImEyeBlocked","disabled","to","e","id","window","scrollTo","top","left","behavior","useEffect","addHeaderBottom","headerBottom","_Fragment","SEO","title","description","RegisterForm"],"sourceRoot":""}