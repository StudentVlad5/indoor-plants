{"version":3,"file":"static/js/765.e6710f67.chunk.js","mappings":"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","sources":["components/Schemas/schemas.js","components/Delivery/Delivery.styled.js","components/Delivery/Delivery.jsx","pages/Care.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require field'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Password must match')\n    .required('Require field'),\n  name: Yup.string()\n    .matches(/\\S{2,}/, 'Name too short (min 2)')\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      'Name must includes only Latin alphabet',\n    )\n    .required('Require field'),\n  phone: Yup.number()\n    .nullable(true)\n    .required('Require field')\n    .min(99999)\n    .max(999999999999),\n  location: Yup.string()\n    .matches(\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Require field'),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require'),\n});\n\nconst changePasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n});\n\nconst checkDepartmentNP = Yup.object().shape({\n  city: Yup.string().min(3).max(80).required('Require field'),\n  department: Yup.string().min(3).max(180).required('Require field'),\n});\n\n// const noticeSchemaFirst = Yup.object().shape({\n//   category: Yup.string().required('Category is Required!'),\n//   typeofpet: Yup.string().required('Type of Pet is Required!'),\n//   title: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(48, 'Too Long!')\n//     .required('Title is Required!'),\n//   name: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(16, 'Too Long!')\n//     .required('Name is Required!'),\n//   birthday: Yup.date().required('BirthDay is Required!'),\n//   breed: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(34, 'Too Long!')\n//     .required('Breed is Required!'),\n// });\n// const noticeSchemaSecond = Yup.object().shape({\n//   sex: Yup.string().required('Sex is Required!'),\n//   size: Yup.string().required('Size is Required!'),\n//   height: Yup.number()\n//     .moreThan('0')\n//     .positive()\n//     .integer()\n//     .max(100, 'Too Match!')\n//     .required('Height is Required!'),\n//   weight: Yup.number()\n//     .moreThan('0')\n//     .positive()\n//     .max(100, 'Too Match!')\n//     .required('Weight is Required!'),\n//   location: Yup.string()\n//     .matches(\n//       /(([0-9A-Za-zsd&.-]){1,}, ([0-9A-Za-zsd&,.-]){1,})/,\n//       'Invalid format. Example: Brovary, Kyiv ...',\n//     )\n//     .required('Location is Required!'),\n// });\n\n// const noticeSchemaSecondPrice = noticeSchemaSecond.concat(\n//   Yup.object().shape({\n//     price: Yup.number()\n//       .moreThan('0')\n//       .positive()\n//       .integer()\n//       .required('Price is Required!'),\n//     currency: Yup.string().required('Currency is Required!'),\n//   }),\n// );\n\n// const noticeSchemaThird = Yup.object().shape({\n//   imageUrl: Yup.string().required('Image is Required!'),\n//   imageUrl_1: Yup.string(),\n//   imageUrl_2: Yup.string(),\n//   passport: Yup.string().required('Passport is Required!'),\n//   sterilization: Yup.string().required('Sterilization is Required!'),\n//   lives: Yup.string().required('Lives is Required!'),\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\n// const noticeSchemaThirdforEdit = Yup.object().shape({\n//   imageUrl: Yup.string(),\n//   imageUrl_1: Yup.string(),\n//   imageUrl_2: Yup.string(),\n//   passport: Yup.string().required('Passport is Required!'),\n//   sterilization: Yup.string().required('Sterilization is Required!'),\n//   lives: Yup.string().required('Lives is Required!'),\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\n// const addPetsUser = Yup.object().shape({\n//   name: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(16, 'Too Long!')\n//     .required('Name is Required!'),\n\n//   data: Yup.date().required('BirthDay is Required!'),\n\n//   breed: Yup.string()\n//     .min(2, 'Too Short!')\n//     .max(34, 'Too Long!')\n//     .required('Breed is Required!'),\n\n//   // imageUrl: Yup.mixed().required('Photo is Required!'),\n\n//   comments: Yup.string()\n//     .min(8, 'Too Short!')\n//     .max(120, 'Too Long!')\n//     .required('Comments are Required!'),\n// });\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  changePasswordSchema,\n  checkDepartmentNP,\n};\n\nexport default schemas;\n","import { Section, Title } from 'components/baseStyles/CommonStyle.styled';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Button } from 'components/helpers/ButtonSplit/ButtonSplit.styled';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const FormSection = styled(Section)`\n  @media screen and (max-width: ${theme.breakpoints.tablet_max}) {\n    background-repeat: no-repeat;\n    background-size: 620px auto;\n    background-position: bottom -250px left 30%;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints\n      .tablet}) and (max-width: ${theme.breakpoints.desktop_max}) {\n    background-repeat: no-repeat;\n    background-size: 1396px auto;\n    background-position: bottom -130px left 50%;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TitleDelivery = styled(Title)`\n  margin-bottom: 40px;\n  margin-top: 0;\n  text-transform: uppercase;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: ${theme.fontSizes.extraXL};\n    font-weight: 500;\n    margin-bottom: 32px;\n    color: ${theme.colors.brown1};\n  }\n`;\nexport const Div = styled.div`\n  margin-bottom: 32px;\n`;\n\nexport const SelectInput = styled(Select)``;\n","import React, { useState, useEffect } from 'react';\nimport schemas from 'components/Schemas/schemas';\nimport {\n  FormSection,\n  FormContainer,\n  TitleDelivery,\n  Div,\n  BtnContainer,\n  Btn,\n  SelectInput,\n} from './Delivery.styled';\nimport {\n  getListOfCities,\n  getListOfDepartments,\n  getListOfCitiesUP,\n  getListOfDepartmentsUP,\n} from 'services/APIservice';\nimport { onLoaded, onLoading } from 'components/helpers/Loader/Loader';\nimport { number } from 'yup';\n\nconst Delivery = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [cityName, setCityName] = useState('');\n  const [checkCityName, setCheckCityName] = useState('');\n  const [listOfCities, setListOfSities] = useState([]);\n\n  const [departmentName, setDepartmentName] = useState('');\n  const [cityRef, setCityRef] = useState('');\n  const [checkCityRef, setCheckCityRef] = useState('');\n  const [listOfDepartment, setListOfDepartment] = useState([]);\n\n  const [cityNameUP, setCityNameUP] = useState('');\n  const [checkCityNameUP, setCheckCityNameUP] = useState('');\n  const [listOfCitiesUP, setListOfSitiesUP] = useState([]);\n\n  const [departmentNameUP, setDepartmentNameUP] = useState('');\n  const [cityIDUP, setCityIDUP] = useState('');\n  const [checkCityIDUP, setCheckCityIDUP] = useState('');\n  const [listOfDepartmentUP, setListOfDepartmentUP] = useState([]);\n\n  //  get cities for Nova Poshta\n  useEffect(() => {\n    async function getData(cityName) {\n      setCheckCityName(cityName);\n      setIsLoading(true);\n      try {\n        const { data } = await getListOfCities('/cities', { filter: cityName });\n        setListOfSities(data);\n        if (!data) {\n          return alert('Whoops, something went wrong');\n        }\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (checkCityName !== cityName && cityName.length > 2) {\n      getData(cityName);\n    }\n  }, [cityName, checkCityName]);\n\n  //  get cities for Ukr Poshta\n  useEffect(() => {\n    async function getData(cityNameUP) {\n      setCheckCityNameUP(cityNameUP);\n      setIsLoading(true);\n      try {\n        const { data } = await getListOfCitiesUP('/cities/up', {\n          filter: cityNameUP,\n        });\n        setListOfSitiesUP(data);\n        if (!data) {\n          return alert('Whoops, something went wrong');\n        }\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (checkCityNameUP !== cityNameUP && cityNameUP.length > 2) {\n      getData(cityNameUP);\n    }\n  }, [cityNameUP, checkCityNameUP]);\n\n  let departmentCity;\n\n  if (listOfCities) {\n    departmentCity = listOfCities.filter(\n      key => key.Description === checkCityName,\n    )[0];\n  }\n  if (departmentCity && departmentCity.Ref !== cityRef) {\n    setCityRef(departmentCity.Ref);\n  }\n\n  // get departments for Nova Poshta\n  useEffect(() => {\n    async function getData() {\n      setCheckCityRef(cityRef);\n      setIsLoading(true);\n      try {\n        const { data } = await getListOfDepartments('/departments', {\n          filter: cityRef,\n        });\n        setListOfDepartment(data);\n        if (!data) {\n          return alert('Whoops, something went wrong');\n        }\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (cityRef !== checkCityRef) {\n      getData();\n    }\n  }, [cityRef, checkCityRef]);\n\n  // get departments for Ukr Poshta\n  useEffect(() => {\n    async function getData() {\n      setCityIDUP(checkCityNameUP);\n      setIsLoading(true);\n      try {\n        const { data } = await getListOfDepartmentsUP('/departments/up', {\n          filter: checkCityNameUP,\n        });\n        setListOfDepartmentUP(data);\n        if (!data) {\n          return alert('Whoops, something went wrong');\n        }\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (\n      Number(checkCityNameUP) &&\n      checkCityNameUP !== '' &&\n      checkCityNameUP !== undefined\n    ) {\n      getData();\n    }\n  }, [checkCityNameUP]);\n\n  // options for Nova Poshta\n\n  function optionsNP(city) {\n    const options = [];\n    const list = [...listOfCities];\n    list\n      .filter(key =>\n        key.Description.toLowerCase()\n          .split('(')[0]\n          .includes(city.toLowerCase()),\n      )\n      .forEach(key => {\n        const obj = {};\n        if (key.Description) {\n          obj.value = key.Description;\n          obj.label = key.Description;\n          options.push(obj);\n        }\n      });\n    return options;\n  }\n\n  function oNP(city) {\n    const options = [];\n    if (listOfDepartment) {\n      const list = [...listOfDepartment];\n      list\n        .filter(key =>\n          key.Description.toLowerCase().includes(city.toLowerCase()),\n        )\n        .forEach(key => {\n          const obj = {};\n          if (key.Description) {\n            obj.value = key.Description;\n            obj.label = key.Description;\n            options.push(obj);\n          }\n        });\n    }\n    return options;\n  }\n\n  // options for UKR Poshta\n\n  function optionsUP(city) {\n    const options = [];\n    if (\n      listOfCitiesUP !== '' &&\n      listOfCitiesUP !== undefined &&\n      Array.isArray(listOfCitiesUP)\n    ) {\n      const list = [...listOfCitiesUP];\n      list\n        .filter(key => key.CITY_UA.toLowerCase().includes(city.toLowerCase()))\n        .forEach(key => {\n          const obj = {};\n          if (key.CITY_UA) {\n            obj.value = key.CITY_ID;\n            obj.label = key.CITY_UA + ` ` + key.REGION_UA + ` область`;\n            options.push(obj);\n          }\n        });\n    }\n\n    return options;\n  }\n\n  function oUP(city) {\n    const options = [];\n    if (listOfDepartmentUP) {\n      const list = [...listOfDepartmentUP];\n      list\n        .filter(key => key.IS_SECURITY === '0')\n        .forEach(key => {\n          const obj = {};\n          if (key.ID) {\n            obj.value =\n              key.PO_SHORT + ' ' + key.ADDRESS + ' код відділення: ' + key.ID;\n            obj.label =\n              key.PO_SHORT + ' ' + key.ADDRESS + ' код відділення: ' + key.ID;\n            options.push(obj);\n          }\n        });\n    }\n    return options;\n  }\n\n  return (\n    <FormSection>\n      <FormContainer>\n        <h2>Delivery block</h2>\n        <TitleDelivery>{'Nova Poshta departments'}</TitleDelivery>\n        <Div>\n          <SelectInput\n            name=\"cityName\"\n            type=\"text\"\n            className=\"basic-single\"\n            classNamePrefix=\"select\"\n            onInputChange={e => setCityName(e)}\n            onChange={e => {\n              if (e?.value) {\n                setCityName(e.value);\n              }\n            }}\n            defaultValue={cityName}\n            isDisabled={false}\n            isClearable={true}\n            isSearchable={true}\n            validate={schemas.checkDepartmentNP.city}\n            options={optionsNP(cityName)}\n            placeholder=\"Select city please...\"\n          />\n        </Div>\n        <Div>\n          <SelectInput\n            name=\"departmentName\"\n            type=\"text\"\n            className=\"basic-single\"\n            classNamePrefix=\"select\"\n            onInputChange={e => setDepartmentName(e)}\n            defaultValue={departmentName}\n            isDisabled={!checkCityRef}\n            isClearable={true}\n            isSearchable={true}\n            validate={schemas.checkDepartmentNP.department}\n            options={oNP(departmentName)}\n            placeholder={\n              departmentName === ''\n                ? 'Select department please...'\n                : departmentName\n            }\n          />\n        </Div>\n\n        <TitleDelivery>{'UKR Poshta departments'}</TitleDelivery>\n        <Div>\n          <SelectInput\n            name=\"cityNameUP\"\n            type=\"text\"\n            className=\"basic-single\"\n            classNamePrefix=\"select\"\n            onInputChange={e => setCityNameUP(e)}\n            onChange={e => {\n              if (e?.value) {\n                setCityNameUP(e.value);\n              }\n            }}\n            defaultValue={cityNameUP}\n            isDisabled={false}\n            isClearable={true}\n            isSearchable={true}\n            options={optionsUP(cityNameUP)}\n            placeholder=\"Select city please...\"\n          />\n        </Div>\n        <Div>\n          <SelectInput\n            name=\"departmentNameUP\"\n            type=\"text\"\n            className=\"basic-single\"\n            classNamePrefix=\"select\"\n            onInputChange={e => setDepartmentNameUP(e)}\n            defaultValue={departmentNameUP}\n            isDisabled={typeof +checkCityNameUP !== 'number'}\n            isClearable={true}\n            isSearchable={true}\n            validate={schemas.checkDepartmentNP.department}\n            options={oUP(departmentNameUP)}\n            placeholder={\n              departmentNameUP === ''\n                ? 'Select department please...'\n                : departmentNameUP\n            }\n          />\n        </Div>\n\n        {isLoading ? onLoading() : onLoaded()}\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default Delivery;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { cleanHeaderBottom } from 'redux/header_bottom/operation';\nimport Delivery from 'components/Delivery/Delivery';\n\nconst CarePage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(cleanHeaderBottom());\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"HomeForest Care\" description=\"Care of your plants\" />\n      <Delivery />\n    </>\n  );\n};\n\nexport default CarePage;\n"],"names":["schemas","registerSchema","Yup","shape","email","matches","required","password","min","max","confirmPassword","oneOf","name","phone","nullable","location","schemasLogin","changePasswordSchema","checkDepartmentNP","city","department","FormSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","breakpoints","tablet_max","tablet","desktop_max","FormContainer","div","_templateObject2","TitleDelivery","Title","_templateObject3","fontSizes","extraXL","colors","brown1","Div","_templateObject4","SelectInput","Select","_templateObject5","departmentCity","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","cityName","setCityName","_useState5","_useState6","checkCityName","setCheckCityName","_useState7","_useState8","listOfCities","setListOfSities","_useState9","_useState10","departmentName","setDepartmentName","_useState11","_useState12","cityRef","setCityRef","_useState13","_useState14","checkCityRef","setCheckCityRef","_useState15","_useState16","listOfDepartment","setListOfDepartment","_useState17","_useState18","cityNameUP","setCityNameUP","_useState19","_useState20","checkCityNameUP","setCheckCityNameUP","_useState21","_useState22","listOfCitiesUP","setListOfSitiesUP","_useState23","_useState24","departmentNameUP","setDepartmentNameUP","_useState25","_useState26","setCityIDUP","_useState27","_useState28","_useState29","_useState30","listOfDepartmentUP","setListOfDepartmentUP","useEffect","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getListOfCitie","data","wrap","_context","prev","next","getListOfCities","filter","sent","abrupt","alert","t0","message","finish","stop","apply","arguments","length","_x","getData","_getData2","_callee2","_yield$getListOfCitie2","_context2","getListOfCitiesUP","_x2","key","Description","Ref","_getData3","_callee3","_yield$getListOfDepar","_context3","getListOfDepartments","_getData4","_callee4","_yield$getListOfDepar2","_context4","getListOfDepartmentsUP","Number","undefined","_jsx","children","_jsxs","type","className","classNamePrefix","onInputChange","e","onChange","value","defaultValue","isDisabled","isClearable","isSearchable","validate","options","_toConsumableArray","toLowerCase","split","includes","forEach","obj","label","push","optionsNP","placeholder","oNP","Array","isArray","CITY_UA","CITY_ID","REGION_UA","optionsUP","IS_SECURITY","ID","PO_SHORT","ADDRESS","oUP","onLoading","onLoaded","dispatch","useDispatch","cleanHeaderBottom","_Fragment","SEO","title","description","Delivery"],"sourceRoot":""}