{"version":3,"file":"static/js/978.a2673319.chunk.js","mappings":"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","sources":["components/Catalog/CatalogList/CatalogList.jsx","components/Catalog/CatalogList/CatalogList.styled.js","components/helpers/Loader/Loader.jsx","components/Favorites/Favorites.styled.js","components/Favorites/Favorites.jsx","pages/Favorite.jsx","services/APIservice.js","utils/pagination.js"],"sourcesContent":["import React from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addReload } from 'redux/reload/slice';\nimport { addFavorite, removeFavorite } from 'redux/auth/operations';\nimport { getUser, selectId, selectIsLoggedIn } from 'redux/auth/selectors';\nimport { onSuccess, onInfo } from 'components/helpers/Messages/NotifyMessages';\n\nimport theme from 'components/baseStyles/Variables.styled';\nimport * as SC from './CatalogList.styled';\n\nconst { BASE_URL_IMG } = window.global;\n\nexport const CatalogList = ({ products }) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const user = useSelector(getUser).favorites;\n  let favorites;\n  user ? (favorites = user.map(item => +item)) : (favorites = []);\n  const _id = useSelector(selectId); //isLoggedIn\n  const routeParams = useParams();\n  const dispatch = useDispatch();\n\n  const toggleFavorite = async id => {\n    let isInFavorite = false;\n    favorites\n      ? (isInFavorite = favorites.includes(id))\n      : (isInFavorite = false);\n    if (isInFavorite) {\n      dispatch(removeFavorite(id));\n      onSuccess('You remove plant from the favorite!');\n      return;\n    }\n    dispatch(addFavorite(id));\n    onSuccess('You add plant to the favorite!');\n  };\n\n  const handleFavoriteBtnClick = id => e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (routeParams.id === 'favorite') {\n      dispatch(addReload(true));\n    }\n    !isLoggedIn ? onInfo('You must be loggined!') : toggleFavorite(id);\n  };\n\n  return (\n    <SC.Grid>\n      {products.map(card => {\n        return (\n          <SC.Card key={card._id}>\n            <SC.BtnForFavorite onClick={handleFavoriteBtnClick(card.article)}>\n              {favorites.includes(card.article) ? (\n                <SC.IconFav size={30} fill={theme.colors.darkGreen} />\n              ) : (\n                <SC.IconFav size={30} color={theme.colors.beige} />\n              )}\n            </SC.BtnForFavorite>\n            <NavLink to={`/catalog/${card._id}`}>\n              <SC.CardImage\n                src={BASE_URL_IMG + card.images[0]}\n                alt={card.name}\n                width=\"285\"\n                height=\"460\"\n                loading=\"lazy\"\n              />\n              <SC.CardTitle>\n                <SC.CardName>{card.name}</SC.CardName>\n                <SC.CardPrices>\n                  {card.currentPrice && (\n                    <SC.CardDiscount>\n                      {card.currentPrice}\n                      {card.currency}\n                    </SC.CardDiscount>\n                  )}\n                  {card.oldPrice && (\n                    <SC.CardPrice>\n                      {card.oldPrice}\n                      {card.currency}\n                    </SC.CardPrice>\n                  )}\n                </SC.CardPrices>\n              </SC.CardTitle>\n              <SC.CardSize>\n                <span>Size</span>\n                <div>\n                  {card.options.map(option => {\n                    return (\n                      option.total != 0 && (\n                        <span key={option._id}>{option.title}</span>\n                      )\n                    );\n                  })}\n                </div>\n              </SC.CardSize>\n            </NavLink>\n          </SC.Card>\n        );\n      })}\n    </SC.Grid>\n  );\n};\n\nCatalogList.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      oldPrice: PropTypes.number.isRequired,\n      currentPrice: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          oldPrice: PropTypes.number,\n          currentPrice: PropTypes.number,\n          total: PropTypes.number,\n        }),\n      ),\n      totalQuantity: PropTypes.number,\n      typeOfPlants: PropTypes.string,\n      light: PropTypes.string,\n      petFriendly: PropTypes.string,\n      maintenance: PropTypes.string,\n      potSize: PropTypes.shape({\n        size: PropTypes.number,\n        unit: PropTypes.string,\n        _id: PropTypes.string,\n      }),\n      hardToKill: PropTypes.string,\n      rare: PropTypes.string,\n      waterSchedule: PropTypes.string,\n      images: PropTypes.array,\n      category: PropTypes.string,\n    }),\n  ),\n};\n","import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { IconFavorite } from 'components/Header/Navigation/Navigation.styled';\n\nconst IconFav = styled(IconFavorite)`\n  display: block;\n  size: 30px;\n\n  transition: ${theme.transition[0]};\n  cursor: pointer;\n\n  & > path {\n    stroke: ${theme.colors.brown1};\n  }\n\n  &:hover,\n  &:focus {\n    transform: ${theme.scale[0]};\n    transition: ${theme.transition[0]};\n  }\n`;\n\nconst Grid = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: stretch;\n  gap: 20px;\n\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    justify-content: space-evenly;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    /* justify-content: flex-end; */\n  }\n`;\n\nconst Card = styled.li`\n  position: relative;\n  & a {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nconst CardImage = styled.img`\n  width: 214px;\n  height: 300px;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 285px;\n    height: 460px;\n  }\n`;\n\nconst CardTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n  max-width: 285px;\n  margin-bottom: 9px;\n`;\n\nconst CardName = styled.span`\n  font-family: ${theme.fonts[1]}; //Nib Pro\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n  color: ${theme.colors.green};\n`;\n\nconst CardPrices = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst CardDiscount = styled.span`\n  font-family: ${theme.fonts[1]}; //Nib Pro\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n\n  color: ${theme.colors.green};\n`;\n\nconst CardPrice = styled.span`\n  font-family: ${theme.fonts[1]}; //Nib Pro\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n  text-decoration-line: line-through;\n\n  color: ${theme.colors.brown2};\n`;\n\nconst CardSize = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n\n  & span {\n    font-family: ${theme.fonts[0]}; //Raisonne Pro\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 140%; /* 16.8px */\n    color: ${theme.colors.brown2};\n  }\n\n  & div {\n    display: flex;\n    gap: 3px;\n  }\n`;\nconst BtnForFavorite = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  border: none;\n  background: transparent;\n`;\n\nexport {\n  Grid,\n  Card,\n  CardImage,\n  CardTitle,\n  CardName,\n  CardPrices,\n  CardDiscount,\n  CardPrice,\n  CardSize,\n  BtnForFavorite,\n  IconFav,\n};\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nconst onLoading = () => {\n  return Loading.circle('Loading...', {\n    backgroundColor: 'transparent',\n    svgSize: '160px',\n    svgColor: `${props => props.theme.orangeLight}`,\n    messageFontSize: '20px',\n  });\n};\n\nconst onLoaded = () => {\n  return Loading.remove();\n};\n\nexport { onLoading, onLoaded };\n","import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Container, Section } from 'components/baseStyles/CommonStyle.styled';\n\nconst CatalogSection = styled(Section)`\n  padding: 0 0;\n`;\n\nconst CatalogContainer = styled(Container)`\n  margin: 0 auto;\n  padding: 0 0;\n  width: 100%;\n`;\n\nconst GridContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    justify-content: space-between;\n  }\n`;\n\nconst GridWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  width: 100%;\n  max-width: calc(100% - 20px);\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-left: 20px;\n  }\n`;\n\nexport { CatalogSection, CatalogContainer, GridContainer, GridWrapper };\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nimport { CatalogList } from '../Catalog/CatalogList/CatalogList';\nimport { Pagination } from 'utils/pagination';\nimport { getFavorites } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'components/helpers/Loader/Loader';\nimport { onFetchError } from 'components/helpers/Messages/NotifyMessages';\n\nimport * as SC from './Favorites.styled';\nimport { useSelector } from 'react-redux';\nimport { selectId } from 'redux/auth/selectors';\n\nlet perPage = 12;\n\nexport const Favorites = () => {\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [totalPage, setTotalPage] = useState(0);\n  const [page, setPages] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = useSelector(selectId);\n  const { t } = useTranslation();\n\n  const setPage = toPage => {\n    searchParams.set('page', toPage);\n    setPages(toPage);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      setSearchParams({ page: 1, perPage });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!page || !perPage) {\n      const params = { page: 1, perPage };\n      setPages(1);\n      setSearchParams(params);\n    }\n\n    (async function getData() {\n      setIsLoading(true);\n      console.log('searchParams', searchParams);\n      try {\n        const { data } = await getFavorites(\n          `/auth/catalog/${id}?${searchParams}`,\n        );\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n        setProducts(data.data);\n        setTotalPage(Math.ceil(data.total / perPage));\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [t, page, perPage, searchParams]);\n\n  return (\n    <SC.CatalogContainer>\n      <SC.CatalogSection>\n        <SC.GridContainer>\n          <SC.GridWrapper>\n            {isLoading ? onLoading() : onLoaded()}\n            {error && onFetchError(t('Whoops, something went wrong'))}\n            {products.length > 0 && !error && (\n              <CatalogList products={products} />\n            )}\n            <Pagination\n              totalPage={totalPage}\n              changePage={setPage}\n              page={page}\n            />\n          </SC.GridWrapper>\n        </SC.GridContainer>\n      </SC.CatalogSection>\n    </SC.CatalogContainer>\n  );\n};\n\nFavorites.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      oldPrice: PropTypes.number.isRequired,\n      currentPrice: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          oldPrice: PropTypes.number,\n          currentPrice: PropTypes.number,\n          total: PropTypes.number,\n        }),\n      ),\n      totalQuantity: PropTypes.number,\n      typeOfPlants: PropTypes.string,\n      light: PropTypes.string,\n      petFriendly: PropTypes.string,\n      maintenance: PropTypes.string,\n      potSize: PropTypes.shape({\n        size: PropTypes.number,\n        unit: PropTypes.string,\n        _id: PropTypes.string,\n      }),\n      hardToKill: PropTypes.string,\n      rare: PropTypes.string,\n      waterSchedule: PropTypes.string,\n      images: PropTypes.array,\n      category: PropTypes.string,\n    }),\n  ),\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport { Favorites } from 'components/Favorites/Favorites';\n\nconst FavoritePage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"HomeForest Favorite\" description=\"Favorite of goods\" />\n      <Favorites />\n    </>\n  );\n};\n\nexport default FavoritePage;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst { BASE_URL } = window.global;\n\n// pathParams\nasync function fetchData(pathParams) {\n  const axiosInstance = axios.create({\n    baseURL: `${BASE_URL}${pathParams}`, //${pathParams}\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'Content-Range',\n      'Access-Control-Allow-Header': 'Origin, Content-Type, X-Auth-Token',\n    },\n  });\n\n  return await axiosInstance.get();\n}\n\nasync function updateUserData(pathParams, body, file) {\n  const formData = new FormData();\n  file && formData.set('avatar', file);\n  formData.append('email', body.email);\n  formData.append('birthday', body.birthday);\n  formData.append('location', body.location);\n  formData.append('password', body.password);\n  formData.append('phone', body.phone);\n  // formData.append('role', body.role);\n  formData.append('userName', body.userName);\n\n  return await axios.patch(`${BASE_URL}${pathParams}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    },\n  });\n}\n\nasync function deleteData(pathParams) {\n  const formData = new FormData();\n  return axios.delete(`${BASE_URL}${pathParams}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    },\n  });\n}\n\nasync function getFavorites(pathParams) {\n  const formData = new FormData();\n  return axios.post(`${BASE_URL}${pathParams}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    },\n  });\n}\n\nasync function getListOfCities(pathParams, body) {\n  // const formData = new FormData();\n  // formData.append(\"filter\", body.filter);\n  return await axios.post(`${BASE_URL}${pathParams}`, body, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    },\n  });\n}\n\nasync function getListOfDepartments(pathParams, body) {\n  return await axios.post(`${BASE_URL}${pathParams}`, body, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    },\n  });\n}\n\nfetchData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n};\n\ndeleteData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n};\n\nupdateUserData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n  formData: PropTypes.string.isRequired,\n};\n\ngetFavorites.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n  formData: PropTypes.string.isRequired,\n};\n\ngetListOfCities.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n};\n\ngetListOfDepartments.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n};\n\nexport {\n  fetchData,\n  updateUserData,\n  deleteData,\n  getFavorites,\n  getListOfCities,\n  getListOfDepartments,\n};\n","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types';\n\nexport function Pagination({ totalPage, changePage, page }) {\n  const handlePageClick = event => {\n    changePage(event.selected + 1);\n  };\n  const upToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n  return (\n    <ReactPaginate\n      breakLabel=\"...\"\n      nextLabel=\">\"\n      onPageChange={handlePageClick}\n      pageRangeDisplayed={5}\n      pageCount={totalPage}\n      forcePage={page - 1}\n      // initialPage={page - 1}\n      previousLabel=\"<\"\n      renderOnZeroPageCount={null}\n      containerClassName=\"paginate__container\"\n      pageClassName=\"paginate__page\"\n      pageLinkClassName=\"paginate__link\"\n      previousClassName=\"paginate__page--prev\"\n      nextClassName=\"paginate__page--next\"\n      previousLinkClassName=\"paginate__link--prev\"\n      nextLinkClassName=\"paginate__link--next\"\n      disabledClassName=\"paginate__page--disabled\"\n      disabledLinkClassName=\"paginate__link--disabled\"\n      activeClassName=\"paginate__page--active\"\n      activeLinkClassName=\"paginate__link--active\"\n      breakClassName=\"paginate__page--break\"\n      breakLinkClassName=\"paginate__link--break\"\n      onClick={upToTop}\n    />\n  );\n}\n\nPagination.propTypes = {\n  totalPage: PropTypes.number,\n  page: PropTypes.number,\n  changePage: PropTypes.func,\n};\n"],"names":["BASE_URL_IMG","window","global","CatalogList","_ref","favorites","products","isLoggedIn","useSelector","selectIsLoggedIn","user","getUser","map","item","selectId","routeParams","useParams","dispatch","useDispatch","toggleFavorite","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","includes","removeFavorite","onSuccess","abrupt","addFavorite","stop","_x","apply","arguments","_jsx","SC","children","card","_jsxs","onClick","article","e","preventDefault","stopPropagation","addReload","onInfo","size","fill","theme","colors","darkGreen","color","beige","NavLink","to","concat","_id","src","images","alt","name","width","height","loading","currentPrice","currency","oldPrice","options","option","total","title","IconFav","styled","IconFavorite","_templateObject","_taggedTemplateLiteral","transition","brown1","scale","Grid","ul","_templateObject2","breakpoints","tablet","desktop","Card","li","_templateObject3","CardImage","img","_templateObject4","CardTitle","div","_templateObject5","CardName","span","_templateObject6","fonts","green","CardPrices","_templateObject7","CardDiscount","_templateObject8","CardPrice","_templateObject9","brown2","CardSize","_templateObject10","BtnForFavorite","button","_templateObject11","onLoading","Loading","circle","backgroundColor","svgSize","svgColor","props","orangeLight","messageFontSize","onLoaded","remove","CatalogSection","Section","CatalogContainer","Container","GridContainer","GridWrapper","Favorites","_useState","useState","_useState2","_slicedToArray","setProducts","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","totalPage","setTotalPage","_useState9","_useState10","page","setPages","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","t","useTranslation","useEffect","perPage","params","_getData","_yield$getFavorites","data","console","log","getFavorites","sent","onFetchError","Math","ceil","t0","finish","length","Pagination","changePage","toPage","set","addHeaderBottom","headerBottom","_Fragment","SEO","description","BASE_URL","fetchData","_fetchData","pathParams","axiosInstance","axios","create","baseURL","headers","get","_x6","_getFavorites","_callee4","formData","_context4","FormData","post","getListOfCities","_x7","_x8","_getListOfCities","_callee5","body","_context5","getListOfDepartments","_x9","_x10","_getListOfDepartments","_callee6","_context6","propTypes","PropTypes","isRequired","ReactPaginate","breakLabel","nextLabel","onPageChange","event","selected","pageRangeDisplayed","pageCount","forcePage","previousLabel","renderOnZeroPageCount","containerClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","disabledClassName","disabledLinkClassName","activeClassName","activeLinkClassName","breakClassName","breakLinkClassName","scrollTo","top","behavior"],"sourceRoot":""}